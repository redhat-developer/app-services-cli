// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package connectormgmtclient

import (
	_context "context"
	_nethttp "net/http"
	"sync"
)

// Ensure, that ConnectorNamespacesApiMock does implement ConnectorNamespacesApi.
// If this is not the case, regenerate this file with moq.
var _ ConnectorNamespacesApi = &ConnectorNamespacesApiMock{}

// ConnectorNamespacesApiMock is a mock implementation of ConnectorNamespacesApi.
//
// 	func TestSomethingThatUsesConnectorNamespacesApi(t *testing.T) {
//
// 		// make and configure a mocked ConnectorNamespacesApi
// 		mockedConnectorNamespacesApi := &ConnectorNamespacesApiMock{
// 			CreateEvaluationNamespaceFunc: func(ctx _context.Context) ApiCreateEvaluationNamespaceRequest {
// 				panic("mock out the CreateEvaluationNamespace method")
// 			},
// 			CreateEvaluationNamespaceExecuteFunc: func(r ApiCreateEvaluationNamespaceRequest) (ConnectorNamespace, *_nethttp.Response, error) {
// 				panic("mock out the CreateEvaluationNamespaceExecute method")
// 			},
// 			GetConnectorNamespaceFunc: func(ctx _context.Context, connectorNamespaceId string) ApiGetConnectorNamespaceRequest {
// 				panic("mock out the GetConnectorNamespace method")
// 			},
// 			GetConnectorNamespaceExecuteFunc: func(r ApiGetConnectorNamespaceRequest) (ConnectorNamespace, *_nethttp.Response, error) {
// 				panic("mock out the GetConnectorNamespaceExecute method")
// 			},
// 			ListConnectorNamespacesFunc: func(ctx _context.Context) ApiListConnectorNamespacesRequest {
// 				panic("mock out the ListConnectorNamespaces method")
// 			},
// 			ListConnectorNamespacesExecuteFunc: func(r ApiListConnectorNamespacesRequest) (ConnectorNamespaceList, *_nethttp.Response, error) {
// 				panic("mock out the ListConnectorNamespacesExecute method")
// 			},
// 		}
//
// 		// use mockedConnectorNamespacesApi in code that requires ConnectorNamespacesApi
// 		// and then make assertions.
//
// 	}
type ConnectorNamespacesApiMock struct {
	// CreateEvaluationNamespaceFunc mocks the CreateEvaluationNamespace method.
	CreateEvaluationNamespaceFunc func(ctx _context.Context) ApiCreateEvaluationNamespaceRequest

	// CreateEvaluationNamespaceExecuteFunc mocks the CreateEvaluationNamespaceExecute method.
	CreateEvaluationNamespaceExecuteFunc func(r ApiCreateEvaluationNamespaceRequest) (ConnectorNamespace, *_nethttp.Response, error)

	// GetConnectorNamespaceFunc mocks the GetConnectorNamespace method.
	GetConnectorNamespaceFunc func(ctx _context.Context, connectorNamespaceId string) ApiGetConnectorNamespaceRequest

	// GetConnectorNamespaceExecuteFunc mocks the GetConnectorNamespaceExecute method.
	GetConnectorNamespaceExecuteFunc func(r ApiGetConnectorNamespaceRequest) (ConnectorNamespace, *_nethttp.Response, error)

	// ListConnectorNamespacesFunc mocks the ListConnectorNamespaces method.
	ListConnectorNamespacesFunc func(ctx _context.Context) ApiListConnectorNamespacesRequest

	// ListConnectorNamespacesExecuteFunc mocks the ListConnectorNamespacesExecute method.
	ListConnectorNamespacesExecuteFunc func(r ApiListConnectorNamespacesRequest) (ConnectorNamespaceList, *_nethttp.Response, error)

	// calls tracks calls to the methods.
	calls struct {
		// CreateEvaluationNamespace holds details about calls to the CreateEvaluationNamespace method.
		CreateEvaluationNamespace []struct {
			// Ctx is the ctx argument value.
			Ctx _context.Context
		}
		// CreateEvaluationNamespaceExecute holds details about calls to the CreateEvaluationNamespaceExecute method.
		CreateEvaluationNamespaceExecute []struct {
			// R is the r argument value.
			R ApiCreateEvaluationNamespaceRequest
		}
		// GetConnectorNamespace holds details about calls to the GetConnectorNamespace method.
		GetConnectorNamespace []struct {
			// Ctx is the ctx argument value.
			Ctx _context.Context
			// ConnectorNamespaceId is the connectorNamespaceId argument value.
			ConnectorNamespaceId string
		}
		// GetConnectorNamespaceExecute holds details about calls to the GetConnectorNamespaceExecute method.
		GetConnectorNamespaceExecute []struct {
			// R is the r argument value.
			R ApiGetConnectorNamespaceRequest
		}
		// ListConnectorNamespaces holds details about calls to the ListConnectorNamespaces method.
		ListConnectorNamespaces []struct {
			// Ctx is the ctx argument value.
			Ctx _context.Context
		}
		// ListConnectorNamespacesExecute holds details about calls to the ListConnectorNamespacesExecute method.
		ListConnectorNamespacesExecute []struct {
			// R is the r argument value.
			R ApiListConnectorNamespacesRequest
		}
	}
	lockCreateEvaluationNamespace        sync.RWMutex
	lockCreateEvaluationNamespaceExecute sync.RWMutex
	lockGetConnectorNamespace            sync.RWMutex
	lockGetConnectorNamespaceExecute     sync.RWMutex
	lockListConnectorNamespaces          sync.RWMutex
	lockListConnectorNamespacesExecute   sync.RWMutex
}

// CreateEvaluationNamespace calls CreateEvaluationNamespaceFunc.
func (mock *ConnectorNamespacesApiMock) CreateEvaluationNamespace(ctx _context.Context) ApiCreateEvaluationNamespaceRequest {
	if mock.CreateEvaluationNamespaceFunc == nil {
		panic("ConnectorNamespacesApiMock.CreateEvaluationNamespaceFunc: method is nil but ConnectorNamespacesApi.CreateEvaluationNamespace was just called")
	}
	callInfo := struct {
		Ctx _context.Context
	}{
		Ctx: ctx,
	}
	mock.lockCreateEvaluationNamespace.Lock()
	mock.calls.CreateEvaluationNamespace = append(mock.calls.CreateEvaluationNamespace, callInfo)
	mock.lockCreateEvaluationNamespace.Unlock()
	return mock.CreateEvaluationNamespaceFunc(ctx)
}

// CreateEvaluationNamespaceCalls gets all the calls that were made to CreateEvaluationNamespace.
// Check the length with:
//     len(mockedConnectorNamespacesApi.CreateEvaluationNamespaceCalls())
func (mock *ConnectorNamespacesApiMock) CreateEvaluationNamespaceCalls() []struct {
	Ctx _context.Context
} {
	var calls []struct {
		Ctx _context.Context
	}
	mock.lockCreateEvaluationNamespace.RLock()
	calls = mock.calls.CreateEvaluationNamespace
	mock.lockCreateEvaluationNamespace.RUnlock()
	return calls
}

// CreateEvaluationNamespaceExecute calls CreateEvaluationNamespaceExecuteFunc.
func (mock *ConnectorNamespacesApiMock) CreateEvaluationNamespaceExecute(r ApiCreateEvaluationNamespaceRequest) (ConnectorNamespace, *_nethttp.Response, error) {
	if mock.CreateEvaluationNamespaceExecuteFunc == nil {
		panic("ConnectorNamespacesApiMock.CreateEvaluationNamespaceExecuteFunc: method is nil but ConnectorNamespacesApi.CreateEvaluationNamespaceExecute was just called")
	}
	callInfo := struct {
		R ApiCreateEvaluationNamespaceRequest
	}{
		R: r,
	}
	mock.lockCreateEvaluationNamespaceExecute.Lock()
	mock.calls.CreateEvaluationNamespaceExecute = append(mock.calls.CreateEvaluationNamespaceExecute, callInfo)
	mock.lockCreateEvaluationNamespaceExecute.Unlock()
	return mock.CreateEvaluationNamespaceExecuteFunc(r)
}

// CreateEvaluationNamespaceExecuteCalls gets all the calls that were made to CreateEvaluationNamespaceExecute.
// Check the length with:
//     len(mockedConnectorNamespacesApi.CreateEvaluationNamespaceExecuteCalls())
func (mock *ConnectorNamespacesApiMock) CreateEvaluationNamespaceExecuteCalls() []struct {
	R ApiCreateEvaluationNamespaceRequest
} {
	var calls []struct {
		R ApiCreateEvaluationNamespaceRequest
	}
	mock.lockCreateEvaluationNamespaceExecute.RLock()
	calls = mock.calls.CreateEvaluationNamespaceExecute
	mock.lockCreateEvaluationNamespaceExecute.RUnlock()
	return calls
}

// GetConnectorNamespace calls GetConnectorNamespaceFunc.
func (mock *ConnectorNamespacesApiMock) GetConnectorNamespace(ctx _context.Context, connectorNamespaceId string) ApiGetConnectorNamespaceRequest {
	if mock.GetConnectorNamespaceFunc == nil {
		panic("ConnectorNamespacesApiMock.GetConnectorNamespaceFunc: method is nil but ConnectorNamespacesApi.GetConnectorNamespace was just called")
	}
	callInfo := struct {
		Ctx                  _context.Context
		ConnectorNamespaceId string
	}{
		Ctx:                  ctx,
		ConnectorNamespaceId: connectorNamespaceId,
	}
	mock.lockGetConnectorNamespace.Lock()
	mock.calls.GetConnectorNamespace = append(mock.calls.GetConnectorNamespace, callInfo)
	mock.lockGetConnectorNamespace.Unlock()
	return mock.GetConnectorNamespaceFunc(ctx, connectorNamespaceId)
}

// GetConnectorNamespaceCalls gets all the calls that were made to GetConnectorNamespace.
// Check the length with:
//     len(mockedConnectorNamespacesApi.GetConnectorNamespaceCalls())
func (mock *ConnectorNamespacesApiMock) GetConnectorNamespaceCalls() []struct {
	Ctx                  _context.Context
	ConnectorNamespaceId string
} {
	var calls []struct {
		Ctx                  _context.Context
		ConnectorNamespaceId string
	}
	mock.lockGetConnectorNamespace.RLock()
	calls = mock.calls.GetConnectorNamespace
	mock.lockGetConnectorNamespace.RUnlock()
	return calls
}

// GetConnectorNamespaceExecute calls GetConnectorNamespaceExecuteFunc.
func (mock *ConnectorNamespacesApiMock) GetConnectorNamespaceExecute(r ApiGetConnectorNamespaceRequest) (ConnectorNamespace, *_nethttp.Response, error) {
	if mock.GetConnectorNamespaceExecuteFunc == nil {
		panic("ConnectorNamespacesApiMock.GetConnectorNamespaceExecuteFunc: method is nil but ConnectorNamespacesApi.GetConnectorNamespaceExecute was just called")
	}
	callInfo := struct {
		R ApiGetConnectorNamespaceRequest
	}{
		R: r,
	}
	mock.lockGetConnectorNamespaceExecute.Lock()
	mock.calls.GetConnectorNamespaceExecute = append(mock.calls.GetConnectorNamespaceExecute, callInfo)
	mock.lockGetConnectorNamespaceExecute.Unlock()
	return mock.GetConnectorNamespaceExecuteFunc(r)
}

// GetConnectorNamespaceExecuteCalls gets all the calls that were made to GetConnectorNamespaceExecute.
// Check the length with:
//     len(mockedConnectorNamespacesApi.GetConnectorNamespaceExecuteCalls())
func (mock *ConnectorNamespacesApiMock) GetConnectorNamespaceExecuteCalls() []struct {
	R ApiGetConnectorNamespaceRequest
} {
	var calls []struct {
		R ApiGetConnectorNamespaceRequest
	}
	mock.lockGetConnectorNamespaceExecute.RLock()
	calls = mock.calls.GetConnectorNamespaceExecute
	mock.lockGetConnectorNamespaceExecute.RUnlock()
	return calls
}

// ListConnectorNamespaces calls ListConnectorNamespacesFunc.
func (mock *ConnectorNamespacesApiMock) ListConnectorNamespaces(ctx _context.Context) ApiListConnectorNamespacesRequest {
	if mock.ListConnectorNamespacesFunc == nil {
		panic("ConnectorNamespacesApiMock.ListConnectorNamespacesFunc: method is nil but ConnectorNamespacesApi.ListConnectorNamespaces was just called")
	}
	callInfo := struct {
		Ctx _context.Context
	}{
		Ctx: ctx,
	}
	mock.lockListConnectorNamespaces.Lock()
	mock.calls.ListConnectorNamespaces = append(mock.calls.ListConnectorNamespaces, callInfo)
	mock.lockListConnectorNamespaces.Unlock()
	return mock.ListConnectorNamespacesFunc(ctx)
}

// ListConnectorNamespacesCalls gets all the calls that were made to ListConnectorNamespaces.
// Check the length with:
//     len(mockedConnectorNamespacesApi.ListConnectorNamespacesCalls())
func (mock *ConnectorNamespacesApiMock) ListConnectorNamespacesCalls() []struct {
	Ctx _context.Context
} {
	var calls []struct {
		Ctx _context.Context
	}
	mock.lockListConnectorNamespaces.RLock()
	calls = mock.calls.ListConnectorNamespaces
	mock.lockListConnectorNamespaces.RUnlock()
	return calls
}

// ListConnectorNamespacesExecute calls ListConnectorNamespacesExecuteFunc.
func (mock *ConnectorNamespacesApiMock) ListConnectorNamespacesExecute(r ApiListConnectorNamespacesRequest) (ConnectorNamespaceList, *_nethttp.Response, error) {
	if mock.ListConnectorNamespacesExecuteFunc == nil {
		panic("ConnectorNamespacesApiMock.ListConnectorNamespacesExecuteFunc: method is nil but ConnectorNamespacesApi.ListConnectorNamespacesExecute was just called")
	}
	callInfo := struct {
		R ApiListConnectorNamespacesRequest
	}{
		R: r,
	}
	mock.lockListConnectorNamespacesExecute.Lock()
	mock.calls.ListConnectorNamespacesExecute = append(mock.calls.ListConnectorNamespacesExecute, callInfo)
	mock.lockListConnectorNamespacesExecute.Unlock()
	return mock.ListConnectorNamespacesExecuteFunc(r)
}

// ListConnectorNamespacesExecuteCalls gets all the calls that were made to ListConnectorNamespacesExecute.
// Check the length with:
//     len(mockedConnectorNamespacesApi.ListConnectorNamespacesExecuteCalls())
func (mock *ConnectorNamespacesApiMock) ListConnectorNamespacesExecuteCalls() []struct {
	R ApiListConnectorNamespacesRequest
} {
	var calls []struct {
		R ApiListConnectorNamespacesRequest
	}
	mock.lockListConnectorNamespacesExecute.RLock()
	calls = mock.calls.ListConnectorNamespacesExecute
	mock.lockListConnectorNamespacesExecute.RUnlock()
	return calls
}
