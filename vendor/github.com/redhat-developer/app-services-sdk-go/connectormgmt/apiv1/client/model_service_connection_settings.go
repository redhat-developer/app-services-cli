/*
 * Connector Management API
 *
 * Connector Management API is a REST API to manage connectors.
 *
 * API version: 0.1.0
 * Contact: rhosak-support@redhat.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package connectormgmtclient

import (
	"encoding/json"
)

// ServiceConnectionSettings struct for ServiceConnectionSettings
type ServiceConnectionSettings struct {
	Id string `json:"id"`
	Url string `json:"url"`
}

// NewServiceConnectionSettings instantiates a new ServiceConnectionSettings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceConnectionSettings(id string, url string) *ServiceConnectionSettings {
	this := ServiceConnectionSettings{}
	this.Id = id
	this.Url = url
	return &this
}

// NewServiceConnectionSettingsWithDefaults instantiates a new ServiceConnectionSettings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceConnectionSettingsWithDefaults() *ServiceConnectionSettings {
	this := ServiceConnectionSettings{}
	return &this
}

// GetId returns the Id field value
func (o *ServiceConnectionSettings) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ServiceConnectionSettings) GetIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ServiceConnectionSettings) SetId(v string) {
	o.Id = v
}

// GetUrl returns the Url field value
func (o *ServiceConnectionSettings) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *ServiceConnectionSettings) GetUrlOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *ServiceConnectionSettings) SetUrl(v string) {
	o.Url = v
}

func (o ServiceConnectionSettings) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["url"] = o.Url
	}
	return json.Marshal(toSerialize)
}

type NullableServiceConnectionSettings struct {
	value *ServiceConnectionSettings
	isSet bool
}

func (v NullableServiceConnectionSettings) Get() *ServiceConnectionSettings {
	return v.value
}

func (v *NullableServiceConnectionSettings) Set(val *ServiceConnectionSettings) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceConnectionSettings) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceConnectionSettings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceConnectionSettings(val *ServiceConnectionSettings) *NullableServiceConnectionSettings {
	return &NullableServiceConnectionSettings{value: val, isSet: true}
}

func (v NullableServiceConnectionSettings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceConnectionSettings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


