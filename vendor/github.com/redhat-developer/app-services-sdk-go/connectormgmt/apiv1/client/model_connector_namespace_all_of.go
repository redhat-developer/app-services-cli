/*
 * Connector Management API
 *
 * Connector Management API is a REST API to manage connectors.
 *
 * API version: 0.1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package connectormgmtclient

import (
	"encoding/json"
)

// ConnectorNamespaceAllOf struct for ConnectorNamespaceAllOf
type ConnectorNamespaceAllOf struct {
	Name string `json:"name"`
	ClusterId string `json:"cluster_id"`
	// Namespace expiration timestamp in RFC 3339 format
	Expiration *string `json:"expiration,omitempty"`
	Tenant ConnectorNamespaceTenant `json:"tenant"`
	Status ConnectorNamespaceStatus `json:"status"`
}

// NewConnectorNamespaceAllOf instantiates a new ConnectorNamespaceAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConnectorNamespaceAllOf(name string, clusterId string, tenant ConnectorNamespaceTenant, status ConnectorNamespaceStatus) *ConnectorNamespaceAllOf {
	this := ConnectorNamespaceAllOf{}
	this.Name = name
	this.ClusterId = clusterId
	this.Tenant = tenant
	this.Status = status
	return &this
}

// NewConnectorNamespaceAllOfWithDefaults instantiates a new ConnectorNamespaceAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConnectorNamespaceAllOfWithDefaults() *ConnectorNamespaceAllOf {
	this := ConnectorNamespaceAllOf{}
	return &this
}

// GetName returns the Name field value
func (o *ConnectorNamespaceAllOf) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ConnectorNamespaceAllOf) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ConnectorNamespaceAllOf) SetName(v string) {
	o.Name = v
}

// GetClusterId returns the ClusterId field value
func (o *ConnectorNamespaceAllOf) GetClusterId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClusterId
}

// GetClusterIdOk returns a tuple with the ClusterId field value
// and a boolean to check if the value has been set.
func (o *ConnectorNamespaceAllOf) GetClusterIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ClusterId, true
}

// SetClusterId sets field value
func (o *ConnectorNamespaceAllOf) SetClusterId(v string) {
	o.ClusterId = v
}

// GetExpiration returns the Expiration field value if set, zero value otherwise.
func (o *ConnectorNamespaceAllOf) GetExpiration() string {
	if o == nil || o.Expiration == nil {
		var ret string
		return ret
	}
	return *o.Expiration
}

// GetExpirationOk returns a tuple with the Expiration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectorNamespaceAllOf) GetExpirationOk() (*string, bool) {
	if o == nil || o.Expiration == nil {
		return nil, false
	}
	return o.Expiration, true
}

// HasExpiration returns a boolean if a field has been set.
func (o *ConnectorNamespaceAllOf) HasExpiration() bool {
	if o != nil && o.Expiration != nil {
		return true
	}

	return false
}

// SetExpiration gets a reference to the given string and assigns it to the Expiration field.
func (o *ConnectorNamespaceAllOf) SetExpiration(v string) {
	o.Expiration = &v
}

// GetTenant returns the Tenant field value
func (o *ConnectorNamespaceAllOf) GetTenant() ConnectorNamespaceTenant {
	if o == nil {
		var ret ConnectorNamespaceTenant
		return ret
	}

	return o.Tenant
}

// GetTenantOk returns a tuple with the Tenant field value
// and a boolean to check if the value has been set.
func (o *ConnectorNamespaceAllOf) GetTenantOk() (*ConnectorNamespaceTenant, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Tenant, true
}

// SetTenant sets field value
func (o *ConnectorNamespaceAllOf) SetTenant(v ConnectorNamespaceTenant) {
	o.Tenant = v
}

// GetStatus returns the Status field value
func (o *ConnectorNamespaceAllOf) GetStatus() ConnectorNamespaceStatus {
	if o == nil {
		var ret ConnectorNamespaceStatus
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *ConnectorNamespaceAllOf) GetStatusOk() (*ConnectorNamespaceStatus, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *ConnectorNamespaceAllOf) SetStatus(v ConnectorNamespaceStatus) {
	o.Status = v
}

func (o ConnectorNamespaceAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["cluster_id"] = o.ClusterId
	}
	if o.Expiration != nil {
		toSerialize["expiration"] = o.Expiration
	}
	if true {
		toSerialize["tenant"] = o.Tenant
	}
	if true {
		toSerialize["status"] = o.Status
	}
	return json.Marshal(toSerialize)
}

type NullableConnectorNamespaceAllOf struct {
	value *ConnectorNamespaceAllOf
	isSet bool
}

func (v NullableConnectorNamespaceAllOf) Get() *ConnectorNamespaceAllOf {
	return v.value
}

func (v *NullableConnectorNamespaceAllOf) Set(val *ConnectorNamespaceAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableConnectorNamespaceAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableConnectorNamespaceAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConnectorNamespaceAllOf(val *ConnectorNamespaceAllOf) *NullableConnectorNamespaceAllOf {
	return &NullableConnectorNamespaceAllOf{value: val, isSet: true}
}

func (v NullableConnectorNamespaceAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConnectorNamespaceAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


