/*
 * Connector Management API
 *
 * Connector Management API is a REST API to manage connectors.
 *
 * API version: 0.1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package connectormgmtclient

import (
	"encoding/json"
	"fmt"
)

// Channel the model 'Channel'
type Channel string

// List of Channel
const (
	CHANNEL_STABLE Channel = "stable"
)

var allowedChannelEnumValues = []Channel{
	"stable",
}

func (v *Channel) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := Channel(value)
	for _, existing := range allowedChannelEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid Channel", value)
}

// NewChannelFromValue returns a pointer to a valid Channel
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewChannelFromValue(v string) (*Channel, error) {
	ev := Channel(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for Channel: valid values are %v", v, allowedChannelEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v Channel) IsValid() bool {
	for _, existing := range allowedChannelEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to Channel value
func (v Channel) Ptr() *Channel {
	return &v
}

type NullableChannel struct {
	value *Channel
	isSet bool
}

func (v NullableChannel) Get() *Channel {
	return v.value
}

func (v *NullableChannel) Set(val *Channel) {
	v.value = val
	v.isSet = true
}

func (v NullableChannel) IsSet() bool {
	return v.isSet
}

func (v *NullableChannel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChannel(val *Channel) *NullableChannel {
	return &NullableChannel{value: val, isSet: true}
}

func (v NullableChannel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChannel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

