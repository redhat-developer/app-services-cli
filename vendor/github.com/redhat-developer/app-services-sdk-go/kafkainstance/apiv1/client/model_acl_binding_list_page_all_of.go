/*
 * Kafka Instance API
 *
 * API for interacting with Kafka Instance. Includes Produce, Consume and Admin APIs
 *
 * API version: 0.12.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kafkainstanceclient

import (
	"encoding/json"
)

// AclBindingListPageAllOf A page of ACL binding entries
type AclBindingListPageAllOf struct {
	Items *[]AclBinding `json:"items,omitempty"`
}

// NewAclBindingListPageAllOf instantiates a new AclBindingListPageAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAclBindingListPageAllOf() *AclBindingListPageAllOf {
	this := AclBindingListPageAllOf{}
	return &this
}

// NewAclBindingListPageAllOfWithDefaults instantiates a new AclBindingListPageAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAclBindingListPageAllOfWithDefaults() *AclBindingListPageAllOf {
	this := AclBindingListPageAllOf{}
	return &this
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *AclBindingListPageAllOf) GetItems() []AclBinding {
	if o == nil || o.Items == nil {
		var ret []AclBinding
		return ret
	}
	return *o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AclBindingListPageAllOf) GetItemsOk() (*[]AclBinding, bool) {
	if o == nil || o.Items == nil {
		return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *AclBindingListPageAllOf) HasItems() bool {
	if o != nil && o.Items != nil {
		return true
	}

	return false
}

// SetItems gets a reference to the given []AclBinding and assigns it to the Items field.
func (o *AclBindingListPageAllOf) SetItems(v []AclBinding) {
	o.Items = &v
}

func (o AclBindingListPageAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Items != nil {
		toSerialize["items"] = o.Items
	}
	return json.Marshal(toSerialize)
}

type NullableAclBindingListPageAllOf struct {
	value *AclBindingListPageAllOf
	isSet bool
}

func (v NullableAclBindingListPageAllOf) Get() *AclBindingListPageAllOf {
	return v.value
}

func (v *NullableAclBindingListPageAllOf) Set(val *AclBindingListPageAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableAclBindingListPageAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableAclBindingListPageAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAclBindingListPageAllOf(val *AclBindingListPageAllOf) *NullableAclBindingListPageAllOf {
	return &NullableAclBindingListPageAllOf{value: val, isSet: true}
}

func (v NullableAclBindingListPageAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAclBindingListPageAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


