/*
 * Account Management Service API
 *
 * Manage user subscriptions and clusters
 *
 * API version: 0.0.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package accountmgmtclient

import (
	"encoding/json"
	"time"
)

// CloudResource struct for CloudResource
type CloudResource struct {
	Href *string `json:"href,omitempty"`
	Id *string `json:"id,omitempty"`
	Kind *string `json:"kind,omitempty"`
	Active *bool `json:"active,omitempty"`
	Category *string `json:"category,omitempty"`
	CategoryPretty *string `json:"category_pretty,omitempty"`
	CloudProvider *string `json:"cloud_provider,omitempty"`
	CpuCores *int32 `json:"cpu_cores,omitempty"`
	CreatedAt *time.Time `json:"created_at,omitempty"`
	GenericName *string `json:"generic_name,omitempty"`
	Memory *int64 `json:"memory,omitempty"`
	MemoryPretty *string `json:"memory_pretty,omitempty"`
	NamePretty *string `json:"name_pretty,omitempty"`
	ResourceType *string `json:"resource_type,omitempty"`
	SizePretty *string `json:"size_pretty,omitempty"`
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
}

// NewCloudResource instantiates a new CloudResource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCloudResource() *CloudResource {
	this := CloudResource{}
	var active bool = true
	this.Active = &active
	return &this
}

// NewCloudResourceWithDefaults instantiates a new CloudResource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCloudResourceWithDefaults() *CloudResource {
	this := CloudResource{}
	var active bool = true
	this.Active = &active
	return &this
}

// GetHref returns the Href field value if set, zero value otherwise.
func (o *CloudResource) GetHref() string {
	if o == nil || o.Href == nil {
		var ret string
		return ret
	}
	return *o.Href
}

// GetHrefOk returns a tuple with the Href field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudResource) GetHrefOk() (*string, bool) {
	if o == nil || o.Href == nil {
		return nil, false
	}
	return o.Href, true
}

// HasHref returns a boolean if a field has been set.
func (o *CloudResource) HasHref() bool {
	if o != nil && o.Href != nil {
		return true
	}

	return false
}

// SetHref gets a reference to the given string and assigns it to the Href field.
func (o *CloudResource) SetHref(v string) {
	o.Href = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CloudResource) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudResource) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CloudResource) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *CloudResource) SetId(v string) {
	o.Id = &v
}

// GetKind returns the Kind field value if set, zero value otherwise.
func (o *CloudResource) GetKind() string {
	if o == nil || o.Kind == nil {
		var ret string
		return ret
	}
	return *o.Kind
}

// GetKindOk returns a tuple with the Kind field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudResource) GetKindOk() (*string, bool) {
	if o == nil || o.Kind == nil {
		return nil, false
	}
	return o.Kind, true
}

// HasKind returns a boolean if a field has been set.
func (o *CloudResource) HasKind() bool {
	if o != nil && o.Kind != nil {
		return true
	}

	return false
}

// SetKind gets a reference to the given string and assigns it to the Kind field.
func (o *CloudResource) SetKind(v string) {
	o.Kind = &v
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *CloudResource) GetActive() bool {
	if o == nil || o.Active == nil {
		var ret bool
		return ret
	}
	return *o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudResource) GetActiveOk() (*bool, bool) {
	if o == nil || o.Active == nil {
		return nil, false
	}
	return o.Active, true
}

// HasActive returns a boolean if a field has been set.
func (o *CloudResource) HasActive() bool {
	if o != nil && o.Active != nil {
		return true
	}

	return false
}

// SetActive gets a reference to the given bool and assigns it to the Active field.
func (o *CloudResource) SetActive(v bool) {
	o.Active = &v
}

// GetCategory returns the Category field value if set, zero value otherwise.
func (o *CloudResource) GetCategory() string {
	if o == nil || o.Category == nil {
		var ret string
		return ret
	}
	return *o.Category
}

// GetCategoryOk returns a tuple with the Category field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudResource) GetCategoryOk() (*string, bool) {
	if o == nil || o.Category == nil {
		return nil, false
	}
	return o.Category, true
}

// HasCategory returns a boolean if a field has been set.
func (o *CloudResource) HasCategory() bool {
	if o != nil && o.Category != nil {
		return true
	}

	return false
}

// SetCategory gets a reference to the given string and assigns it to the Category field.
func (o *CloudResource) SetCategory(v string) {
	o.Category = &v
}

// GetCategoryPretty returns the CategoryPretty field value if set, zero value otherwise.
func (o *CloudResource) GetCategoryPretty() string {
	if o == nil || o.CategoryPretty == nil {
		var ret string
		return ret
	}
	return *o.CategoryPretty
}

// GetCategoryPrettyOk returns a tuple with the CategoryPretty field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudResource) GetCategoryPrettyOk() (*string, bool) {
	if o == nil || o.CategoryPretty == nil {
		return nil, false
	}
	return o.CategoryPretty, true
}

// HasCategoryPretty returns a boolean if a field has been set.
func (o *CloudResource) HasCategoryPretty() bool {
	if o != nil && o.CategoryPretty != nil {
		return true
	}

	return false
}

// SetCategoryPretty gets a reference to the given string and assigns it to the CategoryPretty field.
func (o *CloudResource) SetCategoryPretty(v string) {
	o.CategoryPretty = &v
}

// GetCloudProvider returns the CloudProvider field value if set, zero value otherwise.
func (o *CloudResource) GetCloudProvider() string {
	if o == nil || o.CloudProvider == nil {
		var ret string
		return ret
	}
	return *o.CloudProvider
}

// GetCloudProviderOk returns a tuple with the CloudProvider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudResource) GetCloudProviderOk() (*string, bool) {
	if o == nil || o.CloudProvider == nil {
		return nil, false
	}
	return o.CloudProvider, true
}

// HasCloudProvider returns a boolean if a field has been set.
func (o *CloudResource) HasCloudProvider() bool {
	if o != nil && o.CloudProvider != nil {
		return true
	}

	return false
}

// SetCloudProvider gets a reference to the given string and assigns it to the CloudProvider field.
func (o *CloudResource) SetCloudProvider(v string) {
	o.CloudProvider = &v
}

// GetCpuCores returns the CpuCores field value if set, zero value otherwise.
func (o *CloudResource) GetCpuCores() int32 {
	if o == nil || o.CpuCores == nil {
		var ret int32
		return ret
	}
	return *o.CpuCores
}

// GetCpuCoresOk returns a tuple with the CpuCores field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudResource) GetCpuCoresOk() (*int32, bool) {
	if o == nil || o.CpuCores == nil {
		return nil, false
	}
	return o.CpuCores, true
}

// HasCpuCores returns a boolean if a field has been set.
func (o *CloudResource) HasCpuCores() bool {
	if o != nil && o.CpuCores != nil {
		return true
	}

	return false
}

// SetCpuCores gets a reference to the given int32 and assigns it to the CpuCores field.
func (o *CloudResource) SetCpuCores(v int32) {
	o.CpuCores = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *CloudResource) GetCreatedAt() time.Time {
	if o == nil || o.CreatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudResource) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *CloudResource) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *CloudResource) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetGenericName returns the GenericName field value if set, zero value otherwise.
func (o *CloudResource) GetGenericName() string {
	if o == nil || o.GenericName == nil {
		var ret string
		return ret
	}
	return *o.GenericName
}

// GetGenericNameOk returns a tuple with the GenericName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudResource) GetGenericNameOk() (*string, bool) {
	if o == nil || o.GenericName == nil {
		return nil, false
	}
	return o.GenericName, true
}

// HasGenericName returns a boolean if a field has been set.
func (o *CloudResource) HasGenericName() bool {
	if o != nil && o.GenericName != nil {
		return true
	}

	return false
}

// SetGenericName gets a reference to the given string and assigns it to the GenericName field.
func (o *CloudResource) SetGenericName(v string) {
	o.GenericName = &v
}

// GetMemory returns the Memory field value if set, zero value otherwise.
func (o *CloudResource) GetMemory() int64 {
	if o == nil || o.Memory == nil {
		var ret int64
		return ret
	}
	return *o.Memory
}

// GetMemoryOk returns a tuple with the Memory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudResource) GetMemoryOk() (*int64, bool) {
	if o == nil || o.Memory == nil {
		return nil, false
	}
	return o.Memory, true
}

// HasMemory returns a boolean if a field has been set.
func (o *CloudResource) HasMemory() bool {
	if o != nil && o.Memory != nil {
		return true
	}

	return false
}

// SetMemory gets a reference to the given int64 and assigns it to the Memory field.
func (o *CloudResource) SetMemory(v int64) {
	o.Memory = &v
}

// GetMemoryPretty returns the MemoryPretty field value if set, zero value otherwise.
func (o *CloudResource) GetMemoryPretty() string {
	if o == nil || o.MemoryPretty == nil {
		var ret string
		return ret
	}
	return *o.MemoryPretty
}

// GetMemoryPrettyOk returns a tuple with the MemoryPretty field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudResource) GetMemoryPrettyOk() (*string, bool) {
	if o == nil || o.MemoryPretty == nil {
		return nil, false
	}
	return o.MemoryPretty, true
}

// HasMemoryPretty returns a boolean if a field has been set.
func (o *CloudResource) HasMemoryPretty() bool {
	if o != nil && o.MemoryPretty != nil {
		return true
	}

	return false
}

// SetMemoryPretty gets a reference to the given string and assigns it to the MemoryPretty field.
func (o *CloudResource) SetMemoryPretty(v string) {
	o.MemoryPretty = &v
}

// GetNamePretty returns the NamePretty field value if set, zero value otherwise.
func (o *CloudResource) GetNamePretty() string {
	if o == nil || o.NamePretty == nil {
		var ret string
		return ret
	}
	return *o.NamePretty
}

// GetNamePrettyOk returns a tuple with the NamePretty field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudResource) GetNamePrettyOk() (*string, bool) {
	if o == nil || o.NamePretty == nil {
		return nil, false
	}
	return o.NamePretty, true
}

// HasNamePretty returns a boolean if a field has been set.
func (o *CloudResource) HasNamePretty() bool {
	if o != nil && o.NamePretty != nil {
		return true
	}

	return false
}

// SetNamePretty gets a reference to the given string and assigns it to the NamePretty field.
func (o *CloudResource) SetNamePretty(v string) {
	o.NamePretty = &v
}

// GetResourceType returns the ResourceType field value if set, zero value otherwise.
func (o *CloudResource) GetResourceType() string {
	if o == nil || o.ResourceType == nil {
		var ret string
		return ret
	}
	return *o.ResourceType
}

// GetResourceTypeOk returns a tuple with the ResourceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudResource) GetResourceTypeOk() (*string, bool) {
	if o == nil || o.ResourceType == nil {
		return nil, false
	}
	return o.ResourceType, true
}

// HasResourceType returns a boolean if a field has been set.
func (o *CloudResource) HasResourceType() bool {
	if o != nil && o.ResourceType != nil {
		return true
	}

	return false
}

// SetResourceType gets a reference to the given string and assigns it to the ResourceType field.
func (o *CloudResource) SetResourceType(v string) {
	o.ResourceType = &v
}

// GetSizePretty returns the SizePretty field value if set, zero value otherwise.
func (o *CloudResource) GetSizePretty() string {
	if o == nil || o.SizePretty == nil {
		var ret string
		return ret
	}
	return *o.SizePretty
}

// GetSizePrettyOk returns a tuple with the SizePretty field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudResource) GetSizePrettyOk() (*string, bool) {
	if o == nil || o.SizePretty == nil {
		return nil, false
	}
	return o.SizePretty, true
}

// HasSizePretty returns a boolean if a field has been set.
func (o *CloudResource) HasSizePretty() bool {
	if o != nil && o.SizePretty != nil {
		return true
	}

	return false
}

// SetSizePretty gets a reference to the given string and assigns it to the SizePretty field.
func (o *CloudResource) SetSizePretty(v string) {
	o.SizePretty = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *CloudResource) GetUpdatedAt() time.Time {
	if o == nil || o.UpdatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudResource) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *CloudResource) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *CloudResource) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

func (o CloudResource) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Href != nil {
		toSerialize["href"] = o.Href
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Kind != nil {
		toSerialize["kind"] = o.Kind
	}
	if o.Active != nil {
		toSerialize["active"] = o.Active
	}
	if o.Category != nil {
		toSerialize["category"] = o.Category
	}
	if o.CategoryPretty != nil {
		toSerialize["category_pretty"] = o.CategoryPretty
	}
	if o.CloudProvider != nil {
		toSerialize["cloud_provider"] = o.CloudProvider
	}
	if o.CpuCores != nil {
		toSerialize["cpu_cores"] = o.CpuCores
	}
	if o.CreatedAt != nil {
		toSerialize["created_at"] = o.CreatedAt
	}
	if o.GenericName != nil {
		toSerialize["generic_name"] = o.GenericName
	}
	if o.Memory != nil {
		toSerialize["memory"] = o.Memory
	}
	if o.MemoryPretty != nil {
		toSerialize["memory_pretty"] = o.MemoryPretty
	}
	if o.NamePretty != nil {
		toSerialize["name_pretty"] = o.NamePretty
	}
	if o.ResourceType != nil {
		toSerialize["resource_type"] = o.ResourceType
	}
	if o.SizePretty != nil {
		toSerialize["size_pretty"] = o.SizePretty
	}
	if o.UpdatedAt != nil {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	return json.Marshal(toSerialize)
}

type NullableCloudResource struct {
	value *CloudResource
	isSet bool
}

func (v NullableCloudResource) Get() *CloudResource {
	return v.value
}

func (v *NullableCloudResource) Set(val *CloudResource) {
	v.value = val
	v.isSet = true
}

func (v NullableCloudResource) IsSet() bool {
	return v.isSet
}

func (v *NullableCloudResource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCloudResource(val *CloudResource) *NullableCloudResource {
	return &NullableCloudResource{value: val, isSet: true}
}

func (v NullableCloudResource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCloudResource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


