/*
 * Account Management Service API
 *
 * Manage user subscriptions and clusters
 *
 * API version: 0.0.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package accountmgmtclient

import (
	"encoding/json"
)

// SubscriptionMetric struct for SubscriptionMetric
type SubscriptionMetric struct {
	Id *string `json:"_id,omitempty"`
}

// NewSubscriptionMetric instantiates a new SubscriptionMetric object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSubscriptionMetric() *SubscriptionMetric {
	this := SubscriptionMetric{}
	return &this
}

// NewSubscriptionMetricWithDefaults instantiates a new SubscriptionMetric object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSubscriptionMetricWithDefaults() *SubscriptionMetric {
	this := SubscriptionMetric{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *SubscriptionMetric) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriptionMetric) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *SubscriptionMetric) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *SubscriptionMetric) SetId(v string) {
	o.Id = &v
}

func (o SubscriptionMetric) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["_id"] = o.Id
	}
	return json.Marshal(toSerialize)
}

type NullableSubscriptionMetric struct {
	value *SubscriptionMetric
	isSet bool
}

func (v NullableSubscriptionMetric) Get() *SubscriptionMetric {
	return v.value
}

func (v *NullableSubscriptionMetric) Set(val *SubscriptionMetric) {
	v.value = val
	v.isSet = true
}

func (v NullableSubscriptionMetric) IsSet() bool {
	return v.isSet
}

func (v *NullableSubscriptionMetric) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSubscriptionMetric(val *SubscriptionMetric) *NullableSubscriptionMetric {
	return &NullableSubscriptionMetric{value: val, isSet: true}
}

func (v NullableSubscriptionMetric) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSubscriptionMetric) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


