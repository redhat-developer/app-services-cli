/*
 * Account Management Service API
 *
 * Manage user subscriptions and clusters
 *
 * API version: 0.0.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package accountmgmtclient

import (
	"encoding/json"
	"time"
)

// AccountGroupAssignment struct for AccountGroupAssignment
type AccountGroupAssignment struct {
	Href *string `json:"href,omitempty"`
	Id *string `json:"id,omitempty"`
	Kind *string `json:"kind,omitempty"`
	AccountGroupId string `json:"account_group_id"`
	AccountId string `json:"account_id"`
	CreatedAt *time.Time `json:"created_at,omitempty"`
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
}

// NewAccountGroupAssignment instantiates a new AccountGroupAssignment object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountGroupAssignment(accountGroupId string, accountId string) *AccountGroupAssignment {
	this := AccountGroupAssignment{}
	this.AccountGroupId = accountGroupId
	this.AccountId = accountId
	return &this
}

// NewAccountGroupAssignmentWithDefaults instantiates a new AccountGroupAssignment object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountGroupAssignmentWithDefaults() *AccountGroupAssignment {
	this := AccountGroupAssignment{}
	return &this
}

// GetHref returns the Href field value if set, zero value otherwise.
func (o *AccountGroupAssignment) GetHref() string {
	if o == nil || o.Href == nil {
		var ret string
		return ret
	}
	return *o.Href
}

// GetHrefOk returns a tuple with the Href field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountGroupAssignment) GetHrefOk() (*string, bool) {
	if o == nil || o.Href == nil {
		return nil, false
	}
	return o.Href, true
}

// HasHref returns a boolean if a field has been set.
func (o *AccountGroupAssignment) HasHref() bool {
	if o != nil && o.Href != nil {
		return true
	}

	return false
}

// SetHref gets a reference to the given string and assigns it to the Href field.
func (o *AccountGroupAssignment) SetHref(v string) {
	o.Href = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AccountGroupAssignment) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountGroupAssignment) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AccountGroupAssignment) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *AccountGroupAssignment) SetId(v string) {
	o.Id = &v
}

// GetKind returns the Kind field value if set, zero value otherwise.
func (o *AccountGroupAssignment) GetKind() string {
	if o == nil || o.Kind == nil {
		var ret string
		return ret
	}
	return *o.Kind
}

// GetKindOk returns a tuple with the Kind field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountGroupAssignment) GetKindOk() (*string, bool) {
	if o == nil || o.Kind == nil {
		return nil, false
	}
	return o.Kind, true
}

// HasKind returns a boolean if a field has been set.
func (o *AccountGroupAssignment) HasKind() bool {
	if o != nil && o.Kind != nil {
		return true
	}

	return false
}

// SetKind gets a reference to the given string and assigns it to the Kind field.
func (o *AccountGroupAssignment) SetKind(v string) {
	o.Kind = &v
}

// GetAccountGroupId returns the AccountGroupId field value
func (o *AccountGroupAssignment) GetAccountGroupId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountGroupId
}

// GetAccountGroupIdOk returns a tuple with the AccountGroupId field value
// and a boolean to check if the value has been set.
func (o *AccountGroupAssignment) GetAccountGroupIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AccountGroupId, true
}

// SetAccountGroupId sets field value
func (o *AccountGroupAssignment) SetAccountGroupId(v string) {
	o.AccountGroupId = v
}

// GetAccountId returns the AccountId field value
func (o *AccountGroupAssignment) GetAccountId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value
// and a boolean to check if the value has been set.
func (o *AccountGroupAssignment) GetAccountIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AccountId, true
}

// SetAccountId sets field value
func (o *AccountGroupAssignment) SetAccountId(v string) {
	o.AccountId = v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *AccountGroupAssignment) GetCreatedAt() time.Time {
	if o == nil || o.CreatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountGroupAssignment) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *AccountGroupAssignment) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *AccountGroupAssignment) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *AccountGroupAssignment) GetUpdatedAt() time.Time {
	if o == nil || o.UpdatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountGroupAssignment) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *AccountGroupAssignment) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *AccountGroupAssignment) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

func (o AccountGroupAssignment) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Href != nil {
		toSerialize["href"] = o.Href
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Kind != nil {
		toSerialize["kind"] = o.Kind
	}
	if true {
		toSerialize["account_group_id"] = o.AccountGroupId
	}
	if true {
		toSerialize["account_id"] = o.AccountId
	}
	if o.CreatedAt != nil {
		toSerialize["created_at"] = o.CreatedAt
	}
	if o.UpdatedAt != nil {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	return json.Marshal(toSerialize)
}

type NullableAccountGroupAssignment struct {
	value *AccountGroupAssignment
	isSet bool
}

func (v NullableAccountGroupAssignment) Get() *AccountGroupAssignment {
	return v.value
}

func (v *NullableAccountGroupAssignment) Set(val *AccountGroupAssignment) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountGroupAssignment) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountGroupAssignment) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountGroupAssignment(val *AccountGroupAssignment) *NullableAccountGroupAssignment {
	return &NullableAccountGroupAssignment{value: val, isSet: true}
}

func (v NullableAccountGroupAssignment) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountGroupAssignment) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


