[kafka.consumerGroup.resetOffset.cmd.shortDescription]
one = 'Reset offset for a consumer group'

[kafka.consumerGroup.resetOffset.cmd.longDescription]
one = '''
Reset the offset for a consumer group.
'''

[kafka.consumerGroup.resetOffset.cmd.example]
one = '''
# reset offset for a consumer group
$ rhoas kafka consumer-group reset-offset --id consumer_group_1 --offset latest

# reset offset for specific consumers in a consumer group
$ rhoas kafka consumer-group reset-offset --id consumer_group_1 --offset latest --topic my-topic --partitions 0,1
'''

[kafka.consumerGroup.resetOffset.flag.topic]
one = 'Select topic for which consumer group offsets are to be reset'

[kafka.consumerGroup.resetOffset.flag.yes]
one = 'Skip confirmation to forcibly reset the offset for the consumer group'

[kafka.consumerGroup.resetOffset.flag.offset]
one = 'Offset type (choose from: "earliest", "latest", "absolute", "timestamp")'

[kafka.consumerGroup.resetOffset.flag.value]
one = 'Custom offset value (required when offset is "absolute" or "timestamp")'

[kafka.consumerGroup.resetOffset.flag.partitions]
one = 'Partitions on which to reset the consumer group offset (space separated integers)'

[kafka.consumerGroup.resetOffset.flag.output]
one = 'Format in which to display reset offset result (choose from: "json", "yml", "yaml")'

[kafka.consumerGroup.resetOffset.input.confirmReset.message]
one = 'Are you sure you want to reset the offset for consumer group "{{.ID}}"?'

[kafka.consumerGroup.resetOffset.log.debug.cancelledReset]
one = 'You have chosen not to reset the consumer group offset.'

[kafka.consumerGroup.resetOffset.log.info.successful]
one = 'Offset has been reset for consumers of Consumer group with ID "{{.ConsumerGroupID}}" in the Kafka instance "{{.InstanceName}}"'
