[generate.cmd.shortDescription]
one='Generate configurations for the service context'

[generate.cmd.longDescription]
one='''
Generate configuration files for the service context to connect with to be used with various tools and platforms

You must specify an output format into which the credentials will be stored:

- env (default): Store configurations in an env file as environment variables
- json: Store configurations in a JSON file
- properties: Store configurations in a properties file, which is typically used in Java-related technologies
- secret: Store configurations in a Kubernetes secret file
'''

[generate.cmd.example]
one='''
## Generate configurations for the current service context in json format
$ rhoas generate-config --type json

## Generate configurations for the current service context in env format and save it in specified path
$ rhoas generate-config --type env --output-file ./configs/.env

## Generate configurations for a specified context as Kubernetes secret
$ rhoas generate-config --name qaprod --type secret
'''

[generate.flag.type]
one='Type of configuration file to be generated'

[generate.flag.overwrite.description]
one = 'Forcibly overwrite a configuration file if it already exists'

[generate.common.flag.fileLocation.description]
description = 'Description for --output-file flag'
one = 'Sets a custom file location to save the configurations'

[generate.error.configFileAlreadyExists]
description = 'Error message for when a configuration file alredy exists at a location'
one = 'file {{.FilePath}} already exists. Use --overwrite to overwrite the file, or the --output-file flag to choose a different location'

[generate.log.info.noSevices]
one='No services available to generate configurations'

[generate.log.info.credentialsSaved]
one='Configurations successfully saved'