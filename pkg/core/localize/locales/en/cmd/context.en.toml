[context.cmd.shortDescription]
one='Group, share and manage your rhoas services'

[context.cmd.longDescription]
one='''
rhoas context commands allow developers to:

  * Group services into contexts that can be used with a number of CLI commands.
  * Manage different service contexts by switching, listing and removing service contexts 
  * Share context with others to use the same set of services
  * Generating configuration for connecting to the services from various platforms and tools

The loading order of contexts follows these rules:

  1. If $RHOAS_CONTEXT environment variable is set, then contexts are managed using only that file
  2. Otherwise, "UserConfigDir/rhoas/contexts.json" is used for contexts

'''

[context.cmd.example]
one='''
## Set the current context
$ rhoas context use --name my-context

## List contexts
$ rhoas context list
'''

[context.use.cmd]

[context.use.cmd.shortDescription]
one='Set the current context'

[context.use.cmd.longDescription]
one='''
Select a service context to be used as the current context.
When you set the context to be used, it is set as the current context for all service based commands.
'''

[context.use.cmd.example]
one='''
## Set the current context
$ rhoas context use --name my-context
'''

[context.use.successMessage]
one='Current context set to "{{.Name}}"'

[context.status.cmd]

[context.status.cmd.shortDescription]
one='Show status of the context'

[context.status.cmd.longDescription]
one='''
Print overview of the services in associated with a service context
'''

[context.status.cmd.example]
one='''
# View the status of all application services in the current service context
$ rhoas context status

# View the status of all application services in a specific service context
$ rhoas context status --name my-context

# View the status of the Kafka instance set in the current service context
$ rhoas context status kafka

# View the status of your services in JSON format
$ rhoas context status -o json
'''

[context.kafkaUse.cmd.example]
description = 'Examples of how to use the command'
one = '''
# Select a Kafka instance by name to be set in the current context
$ rhoas context kafka-use --name=my-kafka

# Select a Kafka instance by ID to be set in the current context
$ rhoas context kafka-use --id=1iSY6RQ3JKI8Q0OTmjQFd3ocFRg
'''

[context.registryUse.cmd.example]
one = '''
# Select a Service Registry instance by name to be set in the current context
rhoas context service-registry-use --name my-service-registry

# Select a Service Registry instance by ID to be set in the current context
rhoas context service-registry-use --id 1iSY6RQ3JKI8Q0OTmjQFd3ocFRg
'''

[context.list.cmd]

[context.list.cmd.shortDescription]
one='List contexts'

[context.list.cmd.longDescription]
one='List currently available service contexts'

[context.list.cmd.example]
one='''
## List contexts
$ rhoas context list
'''

[context.list.log.info.noContexts]
one='''
No service contexts exist.

Run the following command to create a service context:

  $ rhoas context create
'''

[context.create.cmd]

[context.create.cmd.shortDescription]
one='Create a service context'

[context.create.cmd.longDescription]
one='Create a service context and assign associated service identifiers'

[context.create.cmd.example]
one='''
## Create context
$ rhoas context create --name my-context
'''

[context.create.input.name.message]
one='Name:'

[context.create.input.name.help]
one='Unique name of service context'

[context.create.log.successMessage]
one='''
Context created successfully

Run the following command to set it as current context:

  $ rhoas context use --name {{.Name}}
'''

[context.create.log.alreadyExists]
one='Context with name "{{.Name}}" already exists'

[context.delete.cmd]

[context.delete.cmd.shortDescription]
one='Delete a service context'

[context.delete.cmd.longDescription]
one='Delete a service context and assign associated service identifiers'

[context.delete.cmd.example]
one='''
## Delete the currently selected service context
$ rhoas context delete

## Delete a service context by name
$ rhoas context delete --name my-context
'''

[context.delete.log.successMessage]
one='Context deleted successfully'

[context.common.flag.name]
one='Name of the context'

[context.common.error.noRegistryID]
one='''
context doesn't have a Service Registry ID.
Use `rhoas context status` commands to review your context
'''

[context.common.error.noKafkaID]
one='''
context doesn't have a Kafka Instance ID.
Use `rhoas context status` commands to review your context
'''

[context.common.error.registry.notFound]
one='''
Service registry instance doesnt exist, you need to review your context using command `rhoas context status`
'''

[context.common.error.kafka.notFound]
one='''
Kafka instance doesnt exist, you need to review your context using command `rhoas context status`
'''

[context.common.error.context.notFound]
one='''
context with name "{{.Name}}" does not exist

Run `rhoas context list` to view available contexts
'''

[context.common.error.notSet]
one='''
current context has not been set. Run the following command to set context and use services:

  rhoas context use --name my-context
'''

[context.common.validation.name.error.required]
one = 'context name is required'

[context.common.validation.name.error.invalidChars]
one = 'invalid context name "{{.Name}}"; only letters (Aa-Zz), numbers, "_", "." and "-" are accepted'