[kafka.cmd.shortDescription]
description = "Short description for command"
one = "Create, view, use, and manage your Kafka instances"

[kafka.cmd.longDescription]
description = "Long description for command"
one = '''
Manage and interact with Kafka instances.

A Kafka instance includes an Apache Kafka cluster, bootstrap server, and the configurations needed to connect to producer and consumer services.

You can create, view, select, and delete Kafka instances.

For each Kafka instance, you can manage ACLs, consumer groups, and topics.
'''

[kafka.cmd.example]
description = "Examples for command"
one = '''
# Create a Kafka instance
rhoas kafka create --name my-kafka-instance

# View configuration details of a Kafka instance
rhoas kafka describe

# List all Kafka instances
rhoas kafka list

# Create a Kafka topic
rhoas kafka topic create --name mytopic
'''

[kafka.common.error.couldNotUseKafka]
description = 'Error message when a Kafka instance could not be set to the current instance'
one = 'could not set the current Kafka instance: {{.ErrorMessage}}'

[kafka.common.error.noKafkaSelected]
description = 'Error message when no Kafka is set'
one = 'no Kafka instance is currently set, use the "--id" flag or set the current instance with the "rhoas kafka use" command'

[kafka.common.flag.output.description]
description = "Description for --output flag"
one = 'Format in which to display the Kafka instance (choose from: "json", "yml", "yaml")'

[kafka.common.flag.page.description]
one = 'Current page number for the list'

[kafka.common.flag.size.description]
one = 'Maximum number of items to be returned per page'

[kafka.common.flag.instanceID.description]
one = 'Kafka instance ID. Uses the current instance if not set'

[kafkas.common.flag.output.description]
one = 'Format in which to display the Kafka instances (choose from: "json", "yml", "yaml")'

[kafka.common.input.instanceName.message]
one = 'Select Kafka instance:'

[kafka.common.log.info.noKafkaInstances]
description = 'Info message when no Kafka instances were found'
one = 'No Kafka instances were found.'

[kafka.topic.common.error.topicNotFoundError]
one = 'topic "{{.TopicName}}" does not exist in Kafka instance "{{.InstanceName}}"'


[kafka.common.validation.page.error.invalid.minValue]
one = 'invalid page number {{.Page}}, minimum value is 1'

[kafka.common.validation.size.error.invalid.minValue]
one = 'invalid value for size {{.Size}}, minimum value is 1'

[kafka.common.error.load.completions.name.flag]
one = 'failed to load completions for --name:'

[kafka.consumerGroup.cmd.shortDescription]
one = 'Describe, list, and delete consumer groups for the current Kafka instance'

[kafka.consumerGroup.cmd.longDescription]
one = '''
View and delete consumer groups for the current Kafka instance.

These commands operate on the current Kafka instance. To select the Kafka instance, use the “rhoas kafka use” command.
'''

[kafka.consumerGroup.cmd.example]
one = '''
# Delete a consumer group
rhoas kafka consumer-group delete --id consumer_group_1

# List all consumer groups
rhoas kafka consumer-group list
'''

[kafka.consumerGroup.common.flag.output.description]
description = "Description for --output flag"
one = 'Format in which to display the consumer group (choose from: "json", "yml", "yaml")'

[kafka.consumerGroup.list.flag.output.description]
description = "Description for --output flag"
one = 'Format in which to display the consumer group (choose from: "json", "yml", "yaml")'

[kafka.consumerGroup.common.flag.id.description]
one = 'The unique ID of the consumer group to {{.Action}}'

[kafka.consumerGroup.common.error.unauthorized]
one = 'you are unauthorized to {{.Operation}} this consumer group'

[kafka.consumerGroup.common.error.forbidden]
one = 'you are forbidden to {{.Operation}} this consumer group'

[kafka.consumerGroup.common.error.internalServerError]
one = 'internal server error'

[kafka.consumerGroup.common.error.notFoundError]
one = 'consumer group with ID "{{.ID}}" not found in Kafka instance "{{.InstanceName}}"'

[kafka.consumerGroup.common.error.unableToConnectToKafka]
one = 'unable to connect to Kafka instance "{{.Name}}"'

[kafka.consumerGroup.common.error.noKafkaSelected]
one = 'no Kafka instance is currently selected, run "rhoas kafka use" to set the current instance'

[kafka.consumerGroup.list.error.unauthorized]
one = 'you are unauthorized to {{.Operation}} these consumer groups'

[kafka.consumerGroup.list.error.forbidden]
one = 'you are forbidden to {{.Operation}} these consumer groups'


[kafka.consumerGroup.delete.cmd.shortDescription]
one = 'Delete a consumer group'

[kafka.consumerGroup.delete.cmd.longDescription]
one = '''
Delete a consumer group from the current Kafka instance.

To select a different Kafka instance, use the “rhoas kafka use” command.
'''

[kafka.consumerGroup.delete.cmd.example]
one = '''
# delete a consumer group
$ rhoas kafka consumer-group delete --id consumer_group_1
'''

[kafka.consumerGroup.delete.flag.yes.description]
one = 'Skip confirmation to forcibly delete a consumer group'

[kafka.consumerGroup.delete.input.name.message]
one = 'Confirm the ID of the consumer group you want to delete:'

[kafka.consumerGroup.delete.log.debug.deleteNotConfirmed]
description = 'Info message when user chose not to delete consumer group'
one = 'Consumer group delete action was not confirmed. Exiting silently'

[kafka.consumerGroup.delete.error.mismatchedIDConfirmation]
one = 'consumer group ID entered "{{.ConfirmedID}}" does not match the ID of the consumer group you tried to delete "{{.ID}}"'

[kafka.consumerGroup.delete.log.info.consumerGroupDeleted]
one = 'Consumer group with ID "{{.ConsumerGroupID}}" has been deleted from the Kafka instance "{{.InstanceName}}"'

[kafka.consumerGroup.delete.error.locked]
one = "a consumer group with active members cannot be deleted"

[kafka.consumerGroup.describe.cmd.shortDescription]
one = 'Describe a consumer group'

[kafka.consumerGroup.describe.cmd.longDescription]
one = '''
View detailed information for a consumer group and its members.
'''

[kafka.consumerGroup.list.flag.topic.description]
one = 'Fetch the consumer groups for a specific Kafka topic'

[kafka.consumerGroup.describe.cmd.example]
one = '''
# describe a consumer group
$ rhoas kafka consumer-group describe --id consumer_group_1 -o json
'''

[kafka.consumerGroup.describe.output.id]
one = 'Consumer group ID: {{.ID}}'

[kafka.consumerGroup.describe.output.activeMembers]
one = 'ACTIVE MEMBERS:'

[kafka.consumerGroup.describe.output.partitionsWithLag]
one = 'PARTITIONS WITH LAG:'

[kafka.consumerGroup.describe.output.state]
one = 'STATE:'

[kafka.consumerGroup.describe.output.unassignedPartitions]
one = 'UNASSIGNED PARTITIONS:'

[kafka.consumerGroup.list.cmd.shortDescription]
one = 'List all consumer groups'

[kafka.consumerGroup.list.cmd.longDescription]
one = 'List the consumer groups in the current Kafka instance. You can view a list of all consumer groups in the Kafka instance, view a specific consumer group, or view the consumer groups for a particular topic.'

[kafka.consumerGroup.list.cmd.example]
one =  '''
# List all consumer groups
$ rhoas kafka consumer-group list

# List all consumer groups in JSON format
$ rhoas kafka consumer-group list -o json
'''

[kafka.consumerGroup.list.flag.limit]
description = 'Description for the --limit flag'
one = 'The maximum number of consumer groups to be returned'

[kafka.consumerGroup.list.flag.search]
description = 'Description for the --search flag'
one = 'Text search to filter consumer groups by ID'

[kafka.consumerGroup.list.flag.page]
description = 'Description for the --page flag'
one = 'View the specified page number in the list of consumer groups'

[kafka.consumerGroup.list.flag.size]
description = 'Description for the --size flag'
one = 'Maximum number of consumer groups to be returned per page'

[kafka.consumerGroup.list.log.info.noConsumerGroups]
one = 'Kafka instance "{{.InstanceName}}" has no consumer groups'

[kafka.consumerGroup.list.log.info.noConsumerGroupsForTopic]
one = 'Kafka instance "{{.InstanceName}}" has no consumer groups for topic "{{.TopicName}}"'

[kafka.create.cmd.shortDescription]
description = "Short description for command"
one = "Create a Kafka instance"

[kafka.create.cmd.longDescription]
description = "Long description for command"
one = '''
Create a Kafka instance on a particular cloud provider and region.

After creating the instance you can view it by running "rhoas kafka describe".
'''

[kafka.create.cmd.example]
description = 'Examples of how to use the command'
one = '''
# Start an interactive prompt to fill out the configuration values for the instance
$ rhoas kafka create

# Create a Kafka instance
$ rhoas kafka create --name my-kafka-instance

# Create a Kafka instance and output the result in YAML format
$ rhoas kafka create -o yaml
'''

[kafka.create.flag.name.description]
one = 'Unique name of the Kafka instance'

[kafka.create.flag.cloudProvider.description]
description = 'Description for the --provider flag'
one = 'Cloud Provider ID'

[kafka.create.flag.cloudRegion.description]
description = 'Description for the --region flag'
one = 'Cloud Provider Region ID'

[kafka.create.flag.size.description]
description = 'Description for the --size flag'
one = 'Size of the Kafka instance'

[kafka.create.flag.autoUse.description]
one = 'Set the new Kafka instance to the current instance'

[kafka.create.flag.wait.description]
one = 'Wait until the Kafka instance is created'

[kafka.create.flag.dryrun.description]
one = 'Validate all user provided arguments without creating the Kafka instance'

[kafka.create.log.info.creatingKafka]
description = 'Message when Kafka instance is being created'
one = 'Creating Kafka instance "{{.Name}}"...'

[kafka.create.log.info.creationInProgress]
description = 'Message when Kafka instance is being created'
one = 'Kafka instance "{{.Name}}" is being created. Current status: {{.Status}}.'

[kafka.create.log.info.dryRun.success]
one = 'Dry run successful, arguments are valid'

[kafka.create.info.successAsync]
description = 'Message to display when instance has been created'
one = 'Kafka instance "{{.Name}}" is being created. To monitor its status run "rhoas status".'

[kafka.create.log.info.creatingKafkaSyncSigint]
one = 'Your Kafka instance is being created in the background. To monitor its status run "rhoas status" or "rhoas kafka describe".'

[kafka.create.info.successSync]
one = 'Kafka instance "{{.Name}}" has been created:'

[kafka.create.input.name.message]
description = 'Input title for Name'
one = 'Name:'

[kafka.create.input.name.help]
description = 'Help for Name input'
one = 'Unique name of the Kafka instance'

[kafka.create.input.cloudProvider.message]
description = 'Input title for Cloud Provider'
one = 'Cloud Provider:'

[kafka.create.input.cloudRegion.message]
description = 'Input title for Cloud Region'
one = "Cloud Region:"

[kafka.create.input.plan.message]
one = 'Instance type:'

[kafka.create.log.info.sizeUnit]
one = 'Kafka instance with size {{.DisplaySize}} is being created. (Size id: {{.Size}})'

[kafka.create.log.info.sizePreview]
one = 'Selected Kafka instance size is a Technology Preview feature. Do not use it for production workloads. For more information, see https://access.redhat.com/support/offerings/techpreview'

[kafka.create.input.cloudRegion.help]
description = 'Help text for Cloud Region'
one = "Geographical region where the Kafka instance will be deployed"

[kafka.create.argument.name.error.requiredWhenNonInteractive]
one = 'name is required. Run "rhoas kafka create --name my-kafka"'

[kafka.create.error.conflictError]
one = 'Kafka instance "{{.Name}}" already exists'

[kafka.create.error.userInstanceType.notFound]
one = 'Cannot fetch user allowed instance type"'

[kafka.create.error.quota.exceeded]
one = 'your accout exceeded quota for Kafka instances. Please refer to https://console.redhat.com/application-services/subscriptions/streams for more information' 

[kafka.create.error.notsupported]
one = 'kafka instance creation is not supported for this cloud provider region and account'

[kafka.create.error.plan.notsupported]
one = 'provided plan "{{.Plan}}" (kafka instances size) is not supported.'

[kafka.create.error.temporary.unavailable]
one = 'unable to create new Kafka instance at this time in specified cloud provider and region. Please try again later or choose another region.'

[kafka.create.error.instance.limit]
one = 'maximum number of allowed kafka instances has been reached. Please review all instances that your user has access to and delete one or more instances before creating a new one'

[kafka.create.region.error.invalidRegion]
one = '''
the region "{{.Region}}" is not available for the cloud provider "{{.Provider}}".
Choose from: {{.Regions}}
'''

[kafka.create.provider.error.invalidProvider]
one = '''
the cloud provider "{{.Provider}}" does not exist or is not available. Choose from: {{.Providers}}
'''

[kafka.create.region.error.regionNotSupported]
one = '''the selected region "{{.Region}}" does not support the instance types that you can create
({{.MyTypes}}). Supported types for this region are: "{{.CloudTypes}}" 
'''

[kafka.create.error.invalidSize]
one = '''
provided instance size is not valid. Valid sizes: {{.ValidSizes}}
'''

[kafka.delete.cmd.shortDescription]
description = "Short description for command"
one = "Delete a Kafka instance"

[kafka.delete.cmd.longDescription]
description = "Long description for command"
one = '''
Permanently delete a Kafka instance, including all topics.

When this command is run, you will be asked to confirm the name of the instance you want to delete. Otherwise you can use "--yes" to skip confirmation and forcibly delete the instance.
'''

[kafka.delete.cmd.example]
description = 'Examples of how to use the command'
one = '''
# Delete the current Kafka instance
$ rhoas kafka delete

# Delete a Kafka instance with a specific ID
$ rhoas kafka delete --id=1iSY6RQ3JKI8Q0OTmjQFd3ocFRg

# Delete a Kafka instance with a specific name
$ rhoas kafka delete --name=my-kafka
'''

[kafka.delete.flag.id]
description = 'Description for the --id flag'
one = 'Unique ID of the Kafka instance you want to delete'

[kafka.delete.flag.name]
description = 'Description for the --name flag'
one = 'Name of the Kafka instance you want to delete'

[kafka.delete.input.confirmName.message]
description = 'Input title for Kafka name confirmation'
one = 'Confirm the name of the instance you want to delete ({{.Name}}):'

[kafka.delete.log.info.incorrectNameConfirmation]
description = 'Info message when user incorrectly confirms the name'
one = 'The name you entered does not match the name of the Kafka instance that you are trying to delete. Please check that it is correct and try again.'

[kafka.delete.log.debug.deletingKafka]
description = 'Debug message when deleting Kafka'
one = 'Deleting Kafka instance'

[kafka.delete.log.info.deleting]
description = 'Info message when instance was deleted'
one = 'Kafka instance "{{.Name}}" is being deleted'

[kafka.describe.cmd.shortDescription]
description = "Short description for command"
one = "View configuration details of a Kafka instance"

[kafka.describe.cmd.longDescription]
description = "Long description for command"
one = '''
View configuration details for a Kafka instance.

Use the "--id" flag to specify which instance you would like to view.

If the "--id" flag is not used then the selected Kafka instance will be used, if available.

You can view the output either as JSON or YAML.

To view a list of all Kafka instances, use the “rhoas kafka list” command.
'''

[kafka.describe.cmd.example]
description = 'Examples of how to use the command'
one = '''
# View the current Kafka instance
$ rhoas kafka describe

# View a specific instance by ID
$ rhoas kafka describe --id=1iSY6RQ3JKI8Q0OTmjQFd3ocFRg

# View a specific instance by name
$ rhoas kafka describe --name=my-kafka

# Customize the output format
$ rhoas kafka describe -o yaml
'''

[kafka.describe.flag.id]
description = 'Description for the --id flag'
one = 'Unique ID of the Kafka instance you want to view'

[kafka.describe.flag.name]
description = 'Description for the --name flag'
one = 'Name of the Kafka instance you want to view'

[kafka.describe.flag.bootstrapserver]
description = 'Description for the --bootstrap-server flag'
one = 'If specified, only the bootstrap server host of the Kafka instance will be displayed'

[kafka.describe.bootstrapserver.not.available]
one = 'Kafka instance "{{.Name}}" does not have a bootstrap server URL.'

[kafka.list.cmd.shortDescription]
description = "Short description for command"
one = "List all Kafka instances"

[kafka.list.cmd.longDescription]
description = "Long description for command"
one = '''
List all Kafka instances.

By default, this command lists the Kafka instances in a table, showing the ID, name, owner, status, cloud provider, and region. You can also view the instances in JSON or YAML format.

To view additional details for a particular Kafka instance, use the “rhoas kafka describe” command.
'''

[kafka.list.cmd.example]
description = 'Examples of how to use the command'
one = '''
# List all Kafka instances using the default output format
$ rhoas kafka list

# List all Kafka instances in JSON format
$ rhoas kafka list -o json
'''

[kafka.list.flag.id]
description = 'Description for the --id flag'
one = 'Unique ID of the Kafka instance you want to list (if not provided, the current Kafka instance will be listed)'

[kafka.list.flag.page]
description = 'Description for the --page flag'
one = 'Display the Kafka instances from the specified page number'

[kafka.list.flag.limit]
description = 'Description for the --limit flag'
one = 'The maximum number of Kafka instances to be returned'

[kafka.list.flag.search]
description = 'Description for the --search flag'
one = 'Text search to filter the Kafka instances by name, owner, cloud_provider, region and status'

[kafka.list.log.debug.filteringKafkaList]
description = 'Debug message when filtering the list of Kafka instances'
one = 'Filtering Kafka instances with the query "{{.Search}}"'

[kafka.topic.common.flag.name.description]
one = 'Topic name'

[kafka.topic.common.flag.output.description]
one = 'Format in which to display the Kafka topic (choose from: "json", "yml", "yaml")'

[kafka.topic.list.flag.output.description]
one = 'Format in which to display the Kafka topic (choose from: "json", "yml", "yaml")'

[kafka.topic.common.input.partitions.description]
description = 'help for the Partitions input'
one = 'The number of partitions in the topic'

[kafka.topic.common.input.retentionMs.description]
description = 'Description for the Retention period input'
one = 'The period of time in milliseconds the broker will retain a partition log before deleting it'

[kafka.topic.common.input.retentionBytes.description]
description = 'Description for the Retention size input'
one = '''The maximum total size of a partition log segments before old log segments are deleted to free up space.
Value of -1 is set by default indicating no retention size limits'''

[kafka.topic.common.input.cleanupPolicy.description]
description = 'Description for the Cleanup policy input'
one = 'Determines whether log messages are deleted, compacted, or both'

[kafka.topic.common.error.noKafkaSelected]
one = 'no Kafka instance is currently selected, run "rhoas kafka use" to set the current instance'

[kafka.topic.common.error.unauthorized]
one = 'you are unauthorized to {{.Operation}} this topic'

[kafka.topic.common.error.forbidden]
one = 'you are forbidden to {{.Operation}} this topic'

[kafka.topic.list.error.unauthorized]
one = 'you are unauthorized to {{.Operation}} these topics'

[kafka.topic.list.error.forbidden]
one = 'you are forbidden to {{.Operation}} these topics'

[kafka.topic.common.error.internalServerError]
one = 'internal server error'

[kafka.topic.common.error.unableToConnectToKafka]
one = 'unable to connect to Kafka instance "{{.Name}}"'

[kafka.topic.common.error.notFoundError]
one = 'topic "{{.TopicName}}" not found in Kafka instance "{{.InstanceName}}"'

[kafka.topic.common.validation.name.error.required]
one = 'topic name is required'

[kafka.topic.common.validation.name.error.lengthError]
one = 'topic name cannot exceed {{.MaxNameLen}} characters'

[kafka.topic.common.validation.name.error.dotsError]
one = 'Must contain at least 3 periods ( ... ) if periods are the only characters used'

[kafka.topic.common.validation.name.error.invalidChars]
one = 'invalid topic name "{{.Name}}"; only letters (Aa-Zz), numbers, "_", "." and "-" are accepted'

[kafka.topic.common.validation.partitions.error.invalid.minValue]
one = 'invalid partition count {{.Partitions}}, minimum value is {{.Min}}'

[kafka.topic.common.validation.partitions.error.invalid.lesserValue]
one = 'Topic currently has {{.CurrPartitions}} partitions, which is higher than the requested {{.Partitions}}.'

[kafka.topic.common.validation.partitions.error.invalid.maxValue]
one = 'invalid partition count {{.Partitions}}, maximum value is {{.Max}}'

[kafka.topic.common.validation.replicationFactor.error.invalid]
one = 'invalid replication factor {{.ReplicationFactor}}, minimum value is {{.MinReplicationFactor}}'

[kafka.topic.common.validation.retentionPeriod.error.invalid]
one = 'invalid retention period {{.RetentionPeriod}}, minimum value is -1'

[kafka.topic.common.validation.retentionSize.error.invalid]
one = 'invalid retention size {{.RetentionSize}}, minimum value is -1'

[kafka.topic.common.input.name.message]
description = 'title for the Name input'
one = 'Name:'

[kafka.topic.common.input.name.help]
description = 'help for the Name input'
one = "Name for the Kafka topic"

[kafka.topic.common.input.partitions.error.invalid]
description = 'Error message when an invalid partition value is entered'
one = 'invalid value for partitions: {{.Partition}}'

[kafka.topic.common.input.retentionMs.error.invalid]
description = 'Error message when an invalid retention period is entered'
one = 'invalid value for retention period: {{.RetentionMs}}'

[kafka.topic.common.input.retentionBytes.error.invalid]
description = 'Error message when an invalid retention size is entered'
one = 'invalid value for retention size: {{.RetentionBytes}}'

[kafka.topic.create.cmd.shortDescription]
one = 'Create a topic'

[kafka.topic.create.cmd.longDescription]
one = '''
Create a topic in the current Kafka instance. You can specify the cleanup policy, number of partitions, retention size, and retention time.

The replicas are preconfigured. The number of partition replicas for the topic is set to 3 and the minimum number of follower replicas that must be in sync with a partition leader is set to 2.
'''

[kafka.topic.create.cmd.example]
one = '''
# Create a topic
$ rhoas kafka topic create --name topic-1
'''

[kafka.topic.create.error.topicNameIsRequired]
one = 'topic name is required. Run "rhoas kafka topic create --name my-topic"'

[kafka.topic.create.error.conflictError]
one = 'topic "{{.TopicName}}" already exists in Kafka instance "{{.InstanceName}}"'

[kafka.topic.create.log.info.topicCreated]
one = 'Topic "{{.TopicName}}" created in Kafka instance "{{.InstanceName}}":'

[kafka.topic.create.input.retentionMs.message]
description = 'Message for the Retention period input'
one = 'Retention Period (ms):'

[kafka.topic.create.input.retentionBytes.message]
description = 'Message for the Retention size input'
one = 'Retention Size (bytes):'

[kafka.topic.create.input.partitions.message]
description = 'Message for the Partitions input'
one = 'Number of Partitions:'

[kafka.topic.create.input.cleanupPolicy.message]
description = 'Message for the Cleanup Policy input'
one = 'Cleanup Policy:'

[kafka.topic.delete.cmd.shortDescription]
one = 'Delete a topic'

[kafka.topic.delete.cmd.longDescription]
one = '''
Delete a topic in the current Kafka instance.
'''

[kafka.topic.delete.cmd.example]
one = '''
# Delete a topic
$ rhoas kafka topic delete --name topic-1
'''

[kafka.topic.delete.flag.yes.description]
one = 'Skip confirmation to forcibly delete a topic'

[kafka.topic.delete.input.name.message]
one = 'Confirm the name of the topic you want to delete ({{.TopicName}}):'

[kafka.topic.delete.error.mismatchedNameConfirmation]
one = 'topic name entered "{{.ConfirmedName}}" does not match the name of the topic you tried to delete "{{.ActualName}}"'

[kafka.topic.delete.log.info.topicDeleted]
one = 'Topic "{{.TopicName}}" has been deleted from the Kafka instance "{{.InstanceName}}"'

[kafka.topic.describe.cmd.shortDescription]
one = 'Describe a topic'

[kafka.topic.describe.cmd.longDescription]
one = '''
View configuration details for a Kafka topic.
'''

[kafka.topic.describe.flag.name]
one = 'Name of the Kafka topic you want to view'

[kafka.topic.describe.cmd.example]
one = '''
# Describe a topic
$ rhoas kafka topic describe --name topic-1
'''

[kafka.topic.list.cmd.shortDescription]
one = 'List all topics'

[kafka.topic.list.cmd.longDescription]
one = '''
List all topics in the current Kafka instance.
'''

[kafka.topic.list.cmd.example]
one = '''
# List all topics
$ rhoas kafka topic list

# List all topics in JSON format
$ rhoas kafka topic list -o json
'''

[kafka.topic.list.log.info.noTopics]
one = 'No topics found in Kafka instance "{{.InstanceName}}"'

[kafka.topic.list.flag.search.description]
description = 'Description for the --search flag'
one = 'Text search to filter the Kafka topics by name'

[kafka.topic.list.flag.page.description]
description = 'Description for the --page flag'
one = 'Current page number for list of topics'

[kafka.topic.list.flag.size.description]
description = 'Description for the --size flag'
one = 'Maximum number of items to be returned per page'

[kafka.topic.list.log.debug.filteringTopicList]
description = 'Debug message when filtering the list of Kafka topic'
one = 'Filtering Kafka topics with the query "{{.Search}}"'

[kafka.topic.list.error.illegalSearchValue]
description = 'Error message when invalid chars are used for search flag'
one = 'illegal search value "{{.Search}}"; only letters (Aa-Zz), numbers, "_", "." and "-" are accepted'

[kafka.topic.update.cmd.shortDescription]
one = 'Update configuration details for a Kafka topic'

[kafka.topic.update.cmd.longDescription]
one = '''
Update a topic in the current Kafka instance. You can update the cleanup policy, number of partitions, retention size, and retention time.
'''

[kafka.topic.update.cmd.example]
one = '''
# Update the message retention period for a topic
$ rhoas kafka topic update --name topic-1 --retention-ms -1
'''

[kafka.topic.update.flag.name]
one = 'Name of the Kafka topic you want to update'

[kafka.topic.update.error.cannotDecreasePartitionCountError]
one = 'the number of topic partitions cannot be decreased from {{.From}} to {{.To}}'

[kafka.topic.update.log.info.samePartitionCount]
one = 'Topic "{{.Name}}" already has {{.Count}} partitions.'

[kafka.topic.update.log.info.nothingToUpdate]
one = 'Nothing to update'

[kafka.topic.update.log.info.topicUpdated]
one = 'Topic "{{.TopicName}}" in Kafka instance "{{.InstanceName}}" has been updated. Run "rhoas kafka topic describe --name {{.TopicName}}" to view its configuration.'

[kafka.topic.update.input.retentionMs.message]
description = 'Message for the Retention period input'
one = 'Retention Period (ms) [optional]:'

[kafka.topic.update.input.retentionMs.help]
description = 'Help for the Retention period input'
one = 'The period of time in milliseconds the broker will retain a partition log before deleting it. Leave blank to skip updating this value.'

[kafka.topic.update.input.retentionBytes.message]
description = 'Message for the Retention size input'
one = 'Retention Size (bytes) [optional]:'

[kafka.topic.update.input.retentionBytes.help]
description = 'Help for the Retention size input'
one = 'The maximum total size of a partition log segments before old log segments are deleted to free up space. Leave blank to skip updating this value.'

[kafka.topic.update.input.cleanupPolicy.message]
description = 'Message for the Cleanup policy input'
one = 'Cleanup Policy [optional]:'

[kafka.topic.update.input.cleanupPolicy.help]
description = 'Help for the Cleanup policy input'
one = 'Determines whether log messages are deleted, compacted, or both.'

[kafka.topic.update.input.partitions.message]
description = 'Message for the Partitions input'
one = 'Number of Partitions [optional]:'

[kafka.topic.update.input.partitions.help]
description = 'Help for the Partitions input'
one = 'The number of partitions in the topic. Leave blank to skip updating this value.'

[kafka.use.cmd.shortDescription]
description = "Short description for command"
one = "Set the current Kafka instance"

[kafka.use.cmd.longDescription]
description = "Long description for command"
one = '''
Select a Kafka instance to be the current instance. When you set the Kafka instance to be used, it is set as the current instance for all “rhoas kafka topic” and “rhoas kafka consumer-group” commands.

You can select a  Kafka instance by name or ID.
'''

[kafka.use.cmd.example]
description = 'Examples of how to use the command'
one = '''
# Select a Kafka instance by name to be set in the current context
$ rhoas kafka use --name=my-kafka

# Select a Kafka instance by ID to be set in the current context
$ rhoas kafka use --id=1iSY6RQ3JKI8Q0OTmjQFd3ocFRg
'''

[kafka.use.flag.id]
description = 'Description for the --id flag'
one = 'Unique ID of the Kafka instance you want to set as the current instance'

[kafka.use.flag.name]
description = 'Description for the --name flag'
one = 'Name of the Kafka instance you want to set as the current instance'


[kafka.use.error.saveError]
description = 'Error message when current Kafka could not be saved in config'
one = 'could not set "{{.Name}}" as the current Kafka instance'

[kafka.use.error.idOrNameRequired]
one= '--id flag or name required when not running interactively'

[kafka.use.log.info.useSuccess]
description = 'Info message when current Kafka was set'
one = 'Kafka instance "{{.Name}}" has been set as the current instance.'

[kafka.validation.error.invalidName]
one = '''
Invalid instance name. Valid names must satisfy the following conditions:

  - must be between 1 and 32 characters
  - must only consist of lower case, alphanumeric characters and '-'
  - must start with an alphabetic character
  - must end with an alphanumeric character
'''

[kafka.validation.name.error.lengthError]
one = 'Cannot exceed {{.MaxLength}} characters'

[kafka.validation.error.invalidSearchValue]
description = 'Error message when invalid search input is provided'
one = '''
illegal search value "{{.Search}}", search input must satisfy the following conditions:

  - must be of 1 or more characters
  - must only consist of alphanumeric characters, '-', '_' and '%'
'''

[kafka.common.error.notFoundByIdError]
one = 'Kafka instance with ID "{{.ID}}" not found'

[kafka.common.error.notFoundByNameError]
one = 'Kafka instance "{{.Name}}" not found'

[kafka.common.error.notReadyError]
one = 'Kafka instance "{{.Name}}" is not ready yet'

[kafka.update.flag.owner]
description = 'Description for the --owner flag'
one = 'ID of the Kafka instance owner'
