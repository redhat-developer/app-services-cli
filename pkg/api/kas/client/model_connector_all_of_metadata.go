/*
 * Managed Service API
 *
 * Managed Service API
 *
 * API version: 0.0.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kasclient

import (
	"encoding/json"
	"time"
)

// ConnectorAllOfMetadata struct for ConnectorAllOfMetadata
type ConnectorAllOfMetadata struct {
	KafkaId   *string    `json:"kafka_id,omitempty"`
	Owner     *string    `json:"owner,omitempty"`
	Name      *string    `json:"name,omitempty"`
	CreatedAt *time.Time `json:"created_at,omitempty"`
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
}

// NewConnectorAllOfMetadata instantiates a new ConnectorAllOfMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConnectorAllOfMetadata() *ConnectorAllOfMetadata {
	this := ConnectorAllOfMetadata{}
	return &this
}

// NewConnectorAllOfMetadataWithDefaults instantiates a new ConnectorAllOfMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConnectorAllOfMetadataWithDefaults() *ConnectorAllOfMetadata {
	this := ConnectorAllOfMetadata{}
	return &this
}

// GetKafkaId returns the KafkaId field value if set, zero value otherwise.
func (o *ConnectorAllOfMetadata) GetKafkaId() string {
	if o == nil || o.KafkaId == nil {
		var ret string
		return ret
	}
	return *o.KafkaId
}

// GetKafkaIdOk returns a tuple with the KafkaId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectorAllOfMetadata) GetKafkaIdOk() (*string, bool) {
	if o == nil || o.KafkaId == nil {
		return nil, false
	}
	return o.KafkaId, true
}

// HasKafkaId returns a boolean if a field has been set.
func (o *ConnectorAllOfMetadata) HasKafkaId() bool {
	if o != nil && o.KafkaId != nil {
		return true
	}

	return false
}

// SetKafkaId gets a reference to the given string and assigns it to the KafkaId field.
func (o *ConnectorAllOfMetadata) SetKafkaId(v string) {
	o.KafkaId = &v
}

// GetOwner returns the Owner field value if set, zero value otherwise.
func (o *ConnectorAllOfMetadata) GetOwner() string {
	if o == nil || o.Owner == nil {
		var ret string
		return ret
	}
	return *o.Owner
}

// GetOwnerOk returns a tuple with the Owner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectorAllOfMetadata) GetOwnerOk() (*string, bool) {
	if o == nil || o.Owner == nil {
		return nil, false
	}
	return o.Owner, true
}

// HasOwner returns a boolean if a field has been set.
func (o *ConnectorAllOfMetadata) HasOwner() bool {
	if o != nil && o.Owner != nil {
		return true
	}

	return false
}

// SetOwner gets a reference to the given string and assigns it to the Owner field.
func (o *ConnectorAllOfMetadata) SetOwner(v string) {
	o.Owner = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ConnectorAllOfMetadata) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectorAllOfMetadata) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ConnectorAllOfMetadata) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ConnectorAllOfMetadata) SetName(v string) {
	o.Name = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *ConnectorAllOfMetadata) GetCreatedAt() time.Time {
	if o == nil || o.CreatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectorAllOfMetadata) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *ConnectorAllOfMetadata) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *ConnectorAllOfMetadata) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *ConnectorAllOfMetadata) GetUpdatedAt() time.Time {
	if o == nil || o.UpdatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectorAllOfMetadata) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *ConnectorAllOfMetadata) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *ConnectorAllOfMetadata) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

func (o ConnectorAllOfMetadata) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.KafkaId != nil {
		toSerialize["kafka_id"] = o.KafkaId
	}
	if o.Owner != nil {
		toSerialize["owner"] = o.Owner
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.CreatedAt != nil {
		toSerialize["created_at"] = o.CreatedAt
	}
	if o.UpdatedAt != nil {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	return json.Marshal(toSerialize)
}

type NullableConnectorAllOfMetadata struct {
	value *ConnectorAllOfMetadata
	isSet bool
}

func (v NullableConnectorAllOfMetadata) Get() *ConnectorAllOfMetadata {
	return v.value
}

func (v *NullableConnectorAllOfMetadata) Set(val *ConnectorAllOfMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableConnectorAllOfMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableConnectorAllOfMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConnectorAllOfMetadata(val *ConnectorAllOfMetadata) *NullableConnectorAllOfMetadata {
	return &NullableConnectorAllOfMetadata{value: val, isSet: true}
}

func (v NullableConnectorAllOfMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConnectorAllOfMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
