/*
 * Managed Service API
 *
 * Managed Service API
 *
 * API version: 0.0.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kasclient

import (
	"encoding/json"
)

// DataPlaneClusterUpdateStatusRequest Schema for the request to update a data plane cluster's status
type DataPlaneClusterUpdateStatusRequest struct {
	// The cluster data plane conditions
	Conditions *[]DataPlaneClusterUpdateStatusRequestConditions `json:"conditions,omitempty"`
	Total      *DataPlaneClusterUpdateStatusRequestTotal        `json:"total,omitempty"`
	Remaining  *DataPlaneClusterUpdateStatusRequestTotal        `json:"remaining,omitempty"`
	NodeInfo   *DataPlaneClusterUpdateStatusRequestNodeInfo     `json:"nodeInfo,omitempty"`
	ResizeInfo *DataPlaneClusterUpdateStatusRequestResizeInfo   `json:"resizeInfo,omitempty"`
}

// NewDataPlaneClusterUpdateStatusRequest instantiates a new DataPlaneClusterUpdateStatusRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDataPlaneClusterUpdateStatusRequest() *DataPlaneClusterUpdateStatusRequest {
	this := DataPlaneClusterUpdateStatusRequest{}
	return &this
}

// NewDataPlaneClusterUpdateStatusRequestWithDefaults instantiates a new DataPlaneClusterUpdateStatusRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDataPlaneClusterUpdateStatusRequestWithDefaults() *DataPlaneClusterUpdateStatusRequest {
	this := DataPlaneClusterUpdateStatusRequest{}
	return &this
}

// GetConditions returns the Conditions field value if set, zero value otherwise.
func (o *DataPlaneClusterUpdateStatusRequest) GetConditions() []DataPlaneClusterUpdateStatusRequestConditions {
	if o == nil || o.Conditions == nil {
		var ret []DataPlaneClusterUpdateStatusRequestConditions
		return ret
	}
	return *o.Conditions
}

// GetConditionsOk returns a tuple with the Conditions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataPlaneClusterUpdateStatusRequest) GetConditionsOk() (*[]DataPlaneClusterUpdateStatusRequestConditions, bool) {
	if o == nil || o.Conditions == nil {
		return nil, false
	}
	return o.Conditions, true
}

// HasConditions returns a boolean if a field has been set.
func (o *DataPlaneClusterUpdateStatusRequest) HasConditions() bool {
	if o != nil && o.Conditions != nil {
		return true
	}

	return false
}

// SetConditions gets a reference to the given []DataPlaneClusterUpdateStatusRequestConditions and assigns it to the Conditions field.
func (o *DataPlaneClusterUpdateStatusRequest) SetConditions(v []DataPlaneClusterUpdateStatusRequestConditions) {
	o.Conditions = &v
}

// GetTotal returns the Total field value if set, zero value otherwise.
func (o *DataPlaneClusterUpdateStatusRequest) GetTotal() DataPlaneClusterUpdateStatusRequestTotal {
	if o == nil || o.Total == nil {
		var ret DataPlaneClusterUpdateStatusRequestTotal
		return ret
	}
	return *o.Total
}

// GetTotalOk returns a tuple with the Total field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataPlaneClusterUpdateStatusRequest) GetTotalOk() (*DataPlaneClusterUpdateStatusRequestTotal, bool) {
	if o == nil || o.Total == nil {
		return nil, false
	}
	return o.Total, true
}

// HasTotal returns a boolean if a field has been set.
func (o *DataPlaneClusterUpdateStatusRequest) HasTotal() bool {
	if o != nil && o.Total != nil {
		return true
	}

	return false
}

// SetTotal gets a reference to the given DataPlaneClusterUpdateStatusRequestTotal and assigns it to the Total field.
func (o *DataPlaneClusterUpdateStatusRequest) SetTotal(v DataPlaneClusterUpdateStatusRequestTotal) {
	o.Total = &v
}

// GetRemaining returns the Remaining field value if set, zero value otherwise.
func (o *DataPlaneClusterUpdateStatusRequest) GetRemaining() DataPlaneClusterUpdateStatusRequestTotal {
	if o == nil || o.Remaining == nil {
		var ret DataPlaneClusterUpdateStatusRequestTotal
		return ret
	}
	return *o.Remaining
}

// GetRemainingOk returns a tuple with the Remaining field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataPlaneClusterUpdateStatusRequest) GetRemainingOk() (*DataPlaneClusterUpdateStatusRequestTotal, bool) {
	if o == nil || o.Remaining == nil {
		return nil, false
	}
	return o.Remaining, true
}

// HasRemaining returns a boolean if a field has been set.
func (o *DataPlaneClusterUpdateStatusRequest) HasRemaining() bool {
	if o != nil && o.Remaining != nil {
		return true
	}

	return false
}

// SetRemaining gets a reference to the given DataPlaneClusterUpdateStatusRequestTotal and assigns it to the Remaining field.
func (o *DataPlaneClusterUpdateStatusRequest) SetRemaining(v DataPlaneClusterUpdateStatusRequestTotal) {
	o.Remaining = &v
}

// GetNodeInfo returns the NodeInfo field value if set, zero value otherwise.
func (o *DataPlaneClusterUpdateStatusRequest) GetNodeInfo() DataPlaneClusterUpdateStatusRequestNodeInfo {
	if o == nil || o.NodeInfo == nil {
		var ret DataPlaneClusterUpdateStatusRequestNodeInfo
		return ret
	}
	return *o.NodeInfo
}

// GetNodeInfoOk returns a tuple with the NodeInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataPlaneClusterUpdateStatusRequest) GetNodeInfoOk() (*DataPlaneClusterUpdateStatusRequestNodeInfo, bool) {
	if o == nil || o.NodeInfo == nil {
		return nil, false
	}
	return o.NodeInfo, true
}

// HasNodeInfo returns a boolean if a field has been set.
func (o *DataPlaneClusterUpdateStatusRequest) HasNodeInfo() bool {
	if o != nil && o.NodeInfo != nil {
		return true
	}

	return false
}

// SetNodeInfo gets a reference to the given DataPlaneClusterUpdateStatusRequestNodeInfo and assigns it to the NodeInfo field.
func (o *DataPlaneClusterUpdateStatusRequest) SetNodeInfo(v DataPlaneClusterUpdateStatusRequestNodeInfo) {
	o.NodeInfo = &v
}

// GetResizeInfo returns the ResizeInfo field value if set, zero value otherwise.
func (o *DataPlaneClusterUpdateStatusRequest) GetResizeInfo() DataPlaneClusterUpdateStatusRequestResizeInfo {
	if o == nil || o.ResizeInfo == nil {
		var ret DataPlaneClusterUpdateStatusRequestResizeInfo
		return ret
	}
	return *o.ResizeInfo
}

// GetResizeInfoOk returns a tuple with the ResizeInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataPlaneClusterUpdateStatusRequest) GetResizeInfoOk() (*DataPlaneClusterUpdateStatusRequestResizeInfo, bool) {
	if o == nil || o.ResizeInfo == nil {
		return nil, false
	}
	return o.ResizeInfo, true
}

// HasResizeInfo returns a boolean if a field has been set.
func (o *DataPlaneClusterUpdateStatusRequest) HasResizeInfo() bool {
	if o != nil && o.ResizeInfo != nil {
		return true
	}

	return false
}

// SetResizeInfo gets a reference to the given DataPlaneClusterUpdateStatusRequestResizeInfo and assigns it to the ResizeInfo field.
func (o *DataPlaneClusterUpdateStatusRequest) SetResizeInfo(v DataPlaneClusterUpdateStatusRequestResizeInfo) {
	o.ResizeInfo = &v
}

func (o DataPlaneClusterUpdateStatusRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Conditions != nil {
		toSerialize["conditions"] = o.Conditions
	}
	if o.Total != nil {
		toSerialize["total"] = o.Total
	}
	if o.Remaining != nil {
		toSerialize["remaining"] = o.Remaining
	}
	if o.NodeInfo != nil {
		toSerialize["nodeInfo"] = o.NodeInfo
	}
	if o.ResizeInfo != nil {
		toSerialize["resizeInfo"] = o.ResizeInfo
	}
	return json.Marshal(toSerialize)
}

type NullableDataPlaneClusterUpdateStatusRequest struct {
	value *DataPlaneClusterUpdateStatusRequest
	isSet bool
}

func (v NullableDataPlaneClusterUpdateStatusRequest) Get() *DataPlaneClusterUpdateStatusRequest {
	return v.value
}

func (v *NullableDataPlaneClusterUpdateStatusRequest) Set(val *DataPlaneClusterUpdateStatusRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDataPlaneClusterUpdateStatusRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDataPlaneClusterUpdateStatusRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDataPlaneClusterUpdateStatusRequest(val *DataPlaneClusterUpdateStatusRequest) *NullableDataPlaneClusterUpdateStatusRequest {
	return &NullableDataPlaneClusterUpdateStatusRequest{value: val, isSet: true}
}

func (v NullableDataPlaneClusterUpdateStatusRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDataPlaneClusterUpdateStatusRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
