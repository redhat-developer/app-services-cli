/*
 * Managed Service API
 *
 * Managed Service API
 *
 * API version: 0.0.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kasclient

import (
	"encoding/json"
)

// ConnectorAllOfDeploymentLocation struct for ConnectorAllOfDeploymentLocation
type ConnectorAllOfDeploymentLocation struct {
	CloudProvider *string `json:"cloud_provider,omitempty"`
	MultiAz       *bool   `json:"multi_az,omitempty"`
	Region        *string `json:"region,omitempty"`
}

// NewConnectorAllOfDeploymentLocation instantiates a new ConnectorAllOfDeploymentLocation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConnectorAllOfDeploymentLocation() *ConnectorAllOfDeploymentLocation {
	this := ConnectorAllOfDeploymentLocation{}
	return &this
}

// NewConnectorAllOfDeploymentLocationWithDefaults instantiates a new ConnectorAllOfDeploymentLocation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConnectorAllOfDeploymentLocationWithDefaults() *ConnectorAllOfDeploymentLocation {
	this := ConnectorAllOfDeploymentLocation{}
	return &this
}

// GetCloudProvider returns the CloudProvider field value if set, zero value otherwise.
func (o *ConnectorAllOfDeploymentLocation) GetCloudProvider() string {
	if o == nil || o.CloudProvider == nil {
		var ret string
		return ret
	}
	return *o.CloudProvider
}

// GetCloudProviderOk returns a tuple with the CloudProvider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectorAllOfDeploymentLocation) GetCloudProviderOk() (*string, bool) {
	if o == nil || o.CloudProvider == nil {
		return nil, false
	}
	return o.CloudProvider, true
}

// HasCloudProvider returns a boolean if a field has been set.
func (o *ConnectorAllOfDeploymentLocation) HasCloudProvider() bool {
	if o != nil && o.CloudProvider != nil {
		return true
	}

	return false
}

// SetCloudProvider gets a reference to the given string and assigns it to the CloudProvider field.
func (o *ConnectorAllOfDeploymentLocation) SetCloudProvider(v string) {
	o.CloudProvider = &v
}

// GetMultiAz returns the MultiAz field value if set, zero value otherwise.
func (o *ConnectorAllOfDeploymentLocation) GetMultiAz() bool {
	if o == nil || o.MultiAz == nil {
		var ret bool
		return ret
	}
	return *o.MultiAz
}

// GetMultiAzOk returns a tuple with the MultiAz field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectorAllOfDeploymentLocation) GetMultiAzOk() (*bool, bool) {
	if o == nil || o.MultiAz == nil {
		return nil, false
	}
	return o.MultiAz, true
}

// HasMultiAz returns a boolean if a field has been set.
func (o *ConnectorAllOfDeploymentLocation) HasMultiAz() bool {
	if o != nil && o.MultiAz != nil {
		return true
	}

	return false
}

// SetMultiAz gets a reference to the given bool and assigns it to the MultiAz field.
func (o *ConnectorAllOfDeploymentLocation) SetMultiAz(v bool) {
	o.MultiAz = &v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *ConnectorAllOfDeploymentLocation) GetRegion() string {
	if o == nil || o.Region == nil {
		var ret string
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectorAllOfDeploymentLocation) GetRegionOk() (*string, bool) {
	if o == nil || o.Region == nil {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *ConnectorAllOfDeploymentLocation) HasRegion() bool {
	if o != nil && o.Region != nil {
		return true
	}

	return false
}

// SetRegion gets a reference to the given string and assigns it to the Region field.
func (o *ConnectorAllOfDeploymentLocation) SetRegion(v string) {
	o.Region = &v
}

func (o ConnectorAllOfDeploymentLocation) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CloudProvider != nil {
		toSerialize["cloud_provider"] = o.CloudProvider
	}
	if o.MultiAz != nil {
		toSerialize["multi_az"] = o.MultiAz
	}
	if o.Region != nil {
		toSerialize["region"] = o.Region
	}
	return json.Marshal(toSerialize)
}

type NullableConnectorAllOfDeploymentLocation struct {
	value *ConnectorAllOfDeploymentLocation
	isSet bool
}

func (v NullableConnectorAllOfDeploymentLocation) Get() *ConnectorAllOfDeploymentLocation {
	return v.value
}

func (v *NullableConnectorAllOfDeploymentLocation) Set(val *ConnectorAllOfDeploymentLocation) {
	v.value = val
	v.isSet = true
}

func (v NullableConnectorAllOfDeploymentLocation) IsSet() bool {
	return v.isSet
}

func (v *NullableConnectorAllOfDeploymentLocation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConnectorAllOfDeploymentLocation(val *ConnectorAllOfDeploymentLocation) *NullableConnectorAllOfDeploymentLocation {
	return &NullableConnectorAllOfDeploymentLocation{value: val, isSet: true}
}

func (v NullableConnectorAllOfDeploymentLocation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConnectorAllOfDeploymentLocation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
