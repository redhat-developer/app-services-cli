/*
 * Account Management Service API
 *
 * Manage user subscriptions and clusters
 *
 * API version: 0.0.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package amsclient

import (
	"encoding/json"
)

// ResourceReview struct for ResourceReview
type ResourceReview struct {
	AccountUsername string   `json:"account_username"`
	Action          string   `json:"action"`
	ClusterIds      []string `json:"cluster_ids"`
	ClusterUuids    []string `json:"cluster_uuids"`
	OrganizationIds []string `json:"organization_ids"`
	ResourceType    string   `json:"resource_type"`
	SubscriptionIds []string `json:"subscription_ids"`
}

// NewResourceReview instantiates a new ResourceReview object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResourceReview(accountUsername string, action string, clusterIds []string, clusterUuids []string, organizationIds []string, resourceType string, subscriptionIds []string) *ResourceReview {
	this := ResourceReview{}
	this.AccountUsername = accountUsername
	this.Action = action
	this.ClusterIds = clusterIds
	this.ClusterUuids = clusterUuids
	this.OrganizationIds = organizationIds
	this.ResourceType = resourceType
	this.SubscriptionIds = subscriptionIds
	return &this
}

// NewResourceReviewWithDefaults instantiates a new ResourceReview object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResourceReviewWithDefaults() *ResourceReview {
	this := ResourceReview{}
	return &this
}

// GetAccountUsername returns the AccountUsername field value
func (o *ResourceReview) GetAccountUsername() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountUsername
}

// GetAccountUsernameOk returns a tuple with the AccountUsername field value
// and a boolean to check if the value has been set.
func (o *ResourceReview) GetAccountUsernameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountUsername, true
}

// SetAccountUsername sets field value
func (o *ResourceReview) SetAccountUsername(v string) {
	o.AccountUsername = v
}

// GetAction returns the Action field value
func (o *ResourceReview) GetAction() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Action
}

// GetActionOk returns a tuple with the Action field value
// and a boolean to check if the value has been set.
func (o *ResourceReview) GetActionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Action, true
}

// SetAction sets field value
func (o *ResourceReview) SetAction(v string) {
	o.Action = v
}

// GetClusterIds returns the ClusterIds field value
func (o *ResourceReview) GetClusterIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.ClusterIds
}

// GetClusterIdsOk returns a tuple with the ClusterIds field value
// and a boolean to check if the value has been set.
func (o *ResourceReview) GetClusterIdsOk() (*[]string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClusterIds, true
}

// SetClusterIds sets field value
func (o *ResourceReview) SetClusterIds(v []string) {
	o.ClusterIds = v
}

// GetClusterUuids returns the ClusterUuids field value
func (o *ResourceReview) GetClusterUuids() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.ClusterUuids
}

// GetClusterUuidsOk returns a tuple with the ClusterUuids field value
// and a boolean to check if the value has been set.
func (o *ResourceReview) GetClusterUuidsOk() (*[]string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClusterUuids, true
}

// SetClusterUuids sets field value
func (o *ResourceReview) SetClusterUuids(v []string) {
	o.ClusterUuids = v
}

// GetOrganizationIds returns the OrganizationIds field value
func (o *ResourceReview) GetOrganizationIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.OrganizationIds
}

// GetOrganizationIdsOk returns a tuple with the OrganizationIds field value
// and a boolean to check if the value has been set.
func (o *ResourceReview) GetOrganizationIdsOk() (*[]string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrganizationIds, true
}

// SetOrganizationIds sets field value
func (o *ResourceReview) SetOrganizationIds(v []string) {
	o.OrganizationIds = v
}

// GetResourceType returns the ResourceType field value
func (o *ResourceReview) GetResourceType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ResourceType
}

// GetResourceTypeOk returns a tuple with the ResourceType field value
// and a boolean to check if the value has been set.
func (o *ResourceReview) GetResourceTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ResourceType, true
}

// SetResourceType sets field value
func (o *ResourceReview) SetResourceType(v string) {
	o.ResourceType = v
}

// GetSubscriptionIds returns the SubscriptionIds field value
func (o *ResourceReview) GetSubscriptionIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.SubscriptionIds
}

// GetSubscriptionIdsOk returns a tuple with the SubscriptionIds field value
// and a boolean to check if the value has been set.
func (o *ResourceReview) GetSubscriptionIdsOk() (*[]string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SubscriptionIds, true
}

// SetSubscriptionIds sets field value
func (o *ResourceReview) SetSubscriptionIds(v []string) {
	o.SubscriptionIds = v
}

func (o ResourceReview) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["account_username"] = o.AccountUsername
	}
	if true {
		toSerialize["action"] = o.Action
	}
	if true {
		toSerialize["cluster_ids"] = o.ClusterIds
	}
	if true {
		toSerialize["cluster_uuids"] = o.ClusterUuids
	}
	if true {
		toSerialize["organization_ids"] = o.OrganizationIds
	}
	if true {
		toSerialize["resource_type"] = o.ResourceType
	}
	if true {
		toSerialize["subscription_ids"] = o.SubscriptionIds
	}
	return json.Marshal(toSerialize)
}

type NullableResourceReview struct {
	value *ResourceReview
	isSet bool
}

func (v NullableResourceReview) Get() *ResourceReview {
	return v.value
}

func (v *NullableResourceReview) Set(val *ResourceReview) {
	v.value = val
	v.isSet = true
}

func (v NullableResourceReview) IsSet() bool {
	return v.isSet
}

func (v *NullableResourceReview) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResourceReview(val *ResourceReview) *NullableResourceReview {
	return &NullableResourceReview{value: val, isSet: true}
}

func (v NullableResourceReview) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResourceReview) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
