/*
 * Account Management Service API
 *
 * Manage user subscriptions and clusters
 *
 * API version: 0.0.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package amsclient

import (
	"encoding/json"
)

// OneMetric struct for OneMetric
type OneMetric struct {
	CloudProvider                string              `json:"cloud_provider"`
	ClusterType                  string              `json:"cluster_type"`
	ComputeNodesCpu              ClusterResource     `json:"compute_nodes_cpu"`
	ComputeNodesMemory           ClusterResource     `json:"compute_nodes_memory"`
	ComputeNodesSockets          ClusterResource     `json:"compute_nodes_sockets"`
	ConsoleUrl                   string              `json:"console_url"`
	Cpu                          ClusterResource     `json:"cpu"`
	CriticalAlertsFiring         float64             `json:"critical_alerts_firing"`
	HealthState                  *string             `json:"health_state,omitempty"`
	Memory                       ClusterResource     `json:"memory"`
	Nodes                        ClusterMetricsNodes `json:"nodes"`
	OpenshiftVersion             string              `json:"openshift_version"`
	OperatingSystem              string              `json:"operating_system"`
	OperatorsConditionFailing    float64             `json:"operators_condition_failing"`
	Region                       string              `json:"region"`
	Sockets                      ClusterResource     `json:"sockets"`
	State                        string              `json:"state"`
	StateDescription             string              `json:"state_description"`
	Storage                      ClusterResource     `json:"storage"`
	SubscriptionCpuTotal         float64             `json:"subscription_cpu_total"`
	SubscriptionObligationExists float64             `json:"subscription_obligation_exists"`
	SubscriptionSocketTotal      float64             `json:"subscription_socket_total"`
	Upgrade                      ClusterUpgrade      `json:"upgrade"`
}

// NewOneMetric instantiates a new OneMetric object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOneMetric(cloudProvider string, clusterType string, computeNodesCpu ClusterResource, computeNodesMemory ClusterResource, computeNodesSockets ClusterResource, consoleUrl string, cpu ClusterResource, criticalAlertsFiring float64, memory ClusterResource, nodes ClusterMetricsNodes, openshiftVersion string, operatingSystem string, operatorsConditionFailing float64, region string, sockets ClusterResource, state string, stateDescription string, storage ClusterResource, subscriptionCpuTotal float64, subscriptionObligationExists float64, subscriptionSocketTotal float64, upgrade ClusterUpgrade) *OneMetric {
	this := OneMetric{}
	this.CloudProvider = cloudProvider
	this.ClusterType = clusterType
	this.ComputeNodesCpu = computeNodesCpu
	this.ComputeNodesMemory = computeNodesMemory
	this.ComputeNodesSockets = computeNodesSockets
	this.ConsoleUrl = consoleUrl
	this.Cpu = cpu
	this.CriticalAlertsFiring = criticalAlertsFiring
	this.Memory = memory
	this.Nodes = nodes
	this.OpenshiftVersion = openshiftVersion
	this.OperatingSystem = operatingSystem
	this.OperatorsConditionFailing = operatorsConditionFailing
	this.Region = region
	this.Sockets = sockets
	this.State = state
	this.StateDescription = stateDescription
	this.Storage = storage
	this.SubscriptionCpuTotal = subscriptionCpuTotal
	this.SubscriptionObligationExists = subscriptionObligationExists
	this.SubscriptionSocketTotal = subscriptionSocketTotal
	this.Upgrade = upgrade
	return &this
}

// NewOneMetricWithDefaults instantiates a new OneMetric object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOneMetricWithDefaults() *OneMetric {
	this := OneMetric{}
	return &this
}

// GetCloudProvider returns the CloudProvider field value
func (o *OneMetric) GetCloudProvider() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CloudProvider
}

// GetCloudProviderOk returns a tuple with the CloudProvider field value
// and a boolean to check if the value has been set.
func (o *OneMetric) GetCloudProviderOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CloudProvider, true
}

// SetCloudProvider sets field value
func (o *OneMetric) SetCloudProvider(v string) {
	o.CloudProvider = v
}

// GetClusterType returns the ClusterType field value
func (o *OneMetric) GetClusterType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClusterType
}

// GetClusterTypeOk returns a tuple with the ClusterType field value
// and a boolean to check if the value has been set.
func (o *OneMetric) GetClusterTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClusterType, true
}

// SetClusterType sets field value
func (o *OneMetric) SetClusterType(v string) {
	o.ClusterType = v
}

// GetComputeNodesCpu returns the ComputeNodesCpu field value
func (o *OneMetric) GetComputeNodesCpu() ClusterResource {
	if o == nil {
		var ret ClusterResource
		return ret
	}

	return o.ComputeNodesCpu
}

// GetComputeNodesCpuOk returns a tuple with the ComputeNodesCpu field value
// and a boolean to check if the value has been set.
func (o *OneMetric) GetComputeNodesCpuOk() (*ClusterResource, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ComputeNodesCpu, true
}

// SetComputeNodesCpu sets field value
func (o *OneMetric) SetComputeNodesCpu(v ClusterResource) {
	o.ComputeNodesCpu = v
}

// GetComputeNodesMemory returns the ComputeNodesMemory field value
func (o *OneMetric) GetComputeNodesMemory() ClusterResource {
	if o == nil {
		var ret ClusterResource
		return ret
	}

	return o.ComputeNodesMemory
}

// GetComputeNodesMemoryOk returns a tuple with the ComputeNodesMemory field value
// and a boolean to check if the value has been set.
func (o *OneMetric) GetComputeNodesMemoryOk() (*ClusterResource, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ComputeNodesMemory, true
}

// SetComputeNodesMemory sets field value
func (o *OneMetric) SetComputeNodesMemory(v ClusterResource) {
	o.ComputeNodesMemory = v
}

// GetComputeNodesSockets returns the ComputeNodesSockets field value
func (o *OneMetric) GetComputeNodesSockets() ClusterResource {
	if o == nil {
		var ret ClusterResource
		return ret
	}

	return o.ComputeNodesSockets
}

// GetComputeNodesSocketsOk returns a tuple with the ComputeNodesSockets field value
// and a boolean to check if the value has been set.
func (o *OneMetric) GetComputeNodesSocketsOk() (*ClusterResource, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ComputeNodesSockets, true
}

// SetComputeNodesSockets sets field value
func (o *OneMetric) SetComputeNodesSockets(v ClusterResource) {
	o.ComputeNodesSockets = v
}

// GetConsoleUrl returns the ConsoleUrl field value
func (o *OneMetric) GetConsoleUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ConsoleUrl
}

// GetConsoleUrlOk returns a tuple with the ConsoleUrl field value
// and a boolean to check if the value has been set.
func (o *OneMetric) GetConsoleUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ConsoleUrl, true
}

// SetConsoleUrl sets field value
func (o *OneMetric) SetConsoleUrl(v string) {
	o.ConsoleUrl = v
}

// GetCpu returns the Cpu field value
func (o *OneMetric) GetCpu() ClusterResource {
	if o == nil {
		var ret ClusterResource
		return ret
	}

	return o.Cpu
}

// GetCpuOk returns a tuple with the Cpu field value
// and a boolean to check if the value has been set.
func (o *OneMetric) GetCpuOk() (*ClusterResource, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Cpu, true
}

// SetCpu sets field value
func (o *OneMetric) SetCpu(v ClusterResource) {
	o.Cpu = v
}

// GetCriticalAlertsFiring returns the CriticalAlertsFiring field value
func (o *OneMetric) GetCriticalAlertsFiring() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.CriticalAlertsFiring
}

// GetCriticalAlertsFiringOk returns a tuple with the CriticalAlertsFiring field value
// and a boolean to check if the value has been set.
func (o *OneMetric) GetCriticalAlertsFiringOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CriticalAlertsFiring, true
}

// SetCriticalAlertsFiring sets field value
func (o *OneMetric) SetCriticalAlertsFiring(v float64) {
	o.CriticalAlertsFiring = v
}

// GetHealthState returns the HealthState field value if set, zero value otherwise.
func (o *OneMetric) GetHealthState() string {
	if o == nil || o.HealthState == nil {
		var ret string
		return ret
	}
	return *o.HealthState
}

// GetHealthStateOk returns a tuple with the HealthState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OneMetric) GetHealthStateOk() (*string, bool) {
	if o == nil || o.HealthState == nil {
		return nil, false
	}
	return o.HealthState, true
}

// HasHealthState returns a boolean if a field has been set.
func (o *OneMetric) HasHealthState() bool {
	if o != nil && o.HealthState != nil {
		return true
	}

	return false
}

// SetHealthState gets a reference to the given string and assigns it to the HealthState field.
func (o *OneMetric) SetHealthState(v string) {
	o.HealthState = &v
}

// GetMemory returns the Memory field value
func (o *OneMetric) GetMemory() ClusterResource {
	if o == nil {
		var ret ClusterResource
		return ret
	}

	return o.Memory
}

// GetMemoryOk returns a tuple with the Memory field value
// and a boolean to check if the value has been set.
func (o *OneMetric) GetMemoryOk() (*ClusterResource, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Memory, true
}

// SetMemory sets field value
func (o *OneMetric) SetMemory(v ClusterResource) {
	o.Memory = v
}

// GetNodes returns the Nodes field value
func (o *OneMetric) GetNodes() ClusterMetricsNodes {
	if o == nil {
		var ret ClusterMetricsNodes
		return ret
	}

	return o.Nodes
}

// GetNodesOk returns a tuple with the Nodes field value
// and a boolean to check if the value has been set.
func (o *OneMetric) GetNodesOk() (*ClusterMetricsNodes, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Nodes, true
}

// SetNodes sets field value
func (o *OneMetric) SetNodes(v ClusterMetricsNodes) {
	o.Nodes = v
}

// GetOpenshiftVersion returns the OpenshiftVersion field value
func (o *OneMetric) GetOpenshiftVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OpenshiftVersion
}

// GetOpenshiftVersionOk returns a tuple with the OpenshiftVersion field value
// and a boolean to check if the value has been set.
func (o *OneMetric) GetOpenshiftVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OpenshiftVersion, true
}

// SetOpenshiftVersion sets field value
func (o *OneMetric) SetOpenshiftVersion(v string) {
	o.OpenshiftVersion = v
}

// GetOperatingSystem returns the OperatingSystem field value
func (o *OneMetric) GetOperatingSystem() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OperatingSystem
}

// GetOperatingSystemOk returns a tuple with the OperatingSystem field value
// and a boolean to check if the value has been set.
func (o *OneMetric) GetOperatingSystemOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OperatingSystem, true
}

// SetOperatingSystem sets field value
func (o *OneMetric) SetOperatingSystem(v string) {
	o.OperatingSystem = v
}

// GetOperatorsConditionFailing returns the OperatorsConditionFailing field value
func (o *OneMetric) GetOperatorsConditionFailing() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.OperatorsConditionFailing
}

// GetOperatorsConditionFailingOk returns a tuple with the OperatorsConditionFailing field value
// and a boolean to check if the value has been set.
func (o *OneMetric) GetOperatorsConditionFailingOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OperatorsConditionFailing, true
}

// SetOperatorsConditionFailing sets field value
func (o *OneMetric) SetOperatorsConditionFailing(v float64) {
	o.OperatorsConditionFailing = v
}

// GetRegion returns the Region field value
func (o *OneMetric) GetRegion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Region
}

// GetRegionOk returns a tuple with the Region field value
// and a boolean to check if the value has been set.
func (o *OneMetric) GetRegionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Region, true
}

// SetRegion sets field value
func (o *OneMetric) SetRegion(v string) {
	o.Region = v
}

// GetSockets returns the Sockets field value
func (o *OneMetric) GetSockets() ClusterResource {
	if o == nil {
		var ret ClusterResource
		return ret
	}

	return o.Sockets
}

// GetSocketsOk returns a tuple with the Sockets field value
// and a boolean to check if the value has been set.
func (o *OneMetric) GetSocketsOk() (*ClusterResource, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Sockets, true
}

// SetSockets sets field value
func (o *OneMetric) SetSockets(v ClusterResource) {
	o.Sockets = v
}

// GetState returns the State field value
func (o *OneMetric) GetState() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.State
}

// GetStateOk returns a tuple with the State field value
// and a boolean to check if the value has been set.
func (o *OneMetric) GetStateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.State, true
}

// SetState sets field value
func (o *OneMetric) SetState(v string) {
	o.State = v
}

// GetStateDescription returns the StateDescription field value
func (o *OneMetric) GetStateDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StateDescription
}

// GetStateDescriptionOk returns a tuple with the StateDescription field value
// and a boolean to check if the value has been set.
func (o *OneMetric) GetStateDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StateDescription, true
}

// SetStateDescription sets field value
func (o *OneMetric) SetStateDescription(v string) {
	o.StateDescription = v
}

// GetStorage returns the Storage field value
func (o *OneMetric) GetStorage() ClusterResource {
	if o == nil {
		var ret ClusterResource
		return ret
	}

	return o.Storage
}

// GetStorageOk returns a tuple with the Storage field value
// and a boolean to check if the value has been set.
func (o *OneMetric) GetStorageOk() (*ClusterResource, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Storage, true
}

// SetStorage sets field value
func (o *OneMetric) SetStorage(v ClusterResource) {
	o.Storage = v
}

// GetSubscriptionCpuTotal returns the SubscriptionCpuTotal field value
func (o *OneMetric) GetSubscriptionCpuTotal() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.SubscriptionCpuTotal
}

// GetSubscriptionCpuTotalOk returns a tuple with the SubscriptionCpuTotal field value
// and a boolean to check if the value has been set.
func (o *OneMetric) GetSubscriptionCpuTotalOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SubscriptionCpuTotal, true
}

// SetSubscriptionCpuTotal sets field value
func (o *OneMetric) SetSubscriptionCpuTotal(v float64) {
	o.SubscriptionCpuTotal = v
}

// GetSubscriptionObligationExists returns the SubscriptionObligationExists field value
func (o *OneMetric) GetSubscriptionObligationExists() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.SubscriptionObligationExists
}

// GetSubscriptionObligationExistsOk returns a tuple with the SubscriptionObligationExists field value
// and a boolean to check if the value has been set.
func (o *OneMetric) GetSubscriptionObligationExistsOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SubscriptionObligationExists, true
}

// SetSubscriptionObligationExists sets field value
func (o *OneMetric) SetSubscriptionObligationExists(v float64) {
	o.SubscriptionObligationExists = v
}

// GetSubscriptionSocketTotal returns the SubscriptionSocketTotal field value
func (o *OneMetric) GetSubscriptionSocketTotal() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.SubscriptionSocketTotal
}

// GetSubscriptionSocketTotalOk returns a tuple with the SubscriptionSocketTotal field value
// and a boolean to check if the value has been set.
func (o *OneMetric) GetSubscriptionSocketTotalOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SubscriptionSocketTotal, true
}

// SetSubscriptionSocketTotal sets field value
func (o *OneMetric) SetSubscriptionSocketTotal(v float64) {
	o.SubscriptionSocketTotal = v
}

// GetUpgrade returns the Upgrade field value
func (o *OneMetric) GetUpgrade() ClusterUpgrade {
	if o == nil {
		var ret ClusterUpgrade
		return ret
	}

	return o.Upgrade
}

// GetUpgradeOk returns a tuple with the Upgrade field value
// and a boolean to check if the value has been set.
func (o *OneMetric) GetUpgradeOk() (*ClusterUpgrade, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Upgrade, true
}

// SetUpgrade sets field value
func (o *OneMetric) SetUpgrade(v ClusterUpgrade) {
	o.Upgrade = v
}

func (o OneMetric) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["cloud_provider"] = o.CloudProvider
	}
	if true {
		toSerialize["cluster_type"] = o.ClusterType
	}
	if true {
		toSerialize["compute_nodes_cpu"] = o.ComputeNodesCpu
	}
	if true {
		toSerialize["compute_nodes_memory"] = o.ComputeNodesMemory
	}
	if true {
		toSerialize["compute_nodes_sockets"] = o.ComputeNodesSockets
	}
	if true {
		toSerialize["console_url"] = o.ConsoleUrl
	}
	if true {
		toSerialize["cpu"] = o.Cpu
	}
	if true {
		toSerialize["critical_alerts_firing"] = o.CriticalAlertsFiring
	}
	if o.HealthState != nil {
		toSerialize["health_state"] = o.HealthState
	}
	if true {
		toSerialize["memory"] = o.Memory
	}
	if true {
		toSerialize["nodes"] = o.Nodes
	}
	if true {
		toSerialize["openshift_version"] = o.OpenshiftVersion
	}
	if true {
		toSerialize["operating_system"] = o.OperatingSystem
	}
	if true {
		toSerialize["operators_condition_failing"] = o.OperatorsConditionFailing
	}
	if true {
		toSerialize["region"] = o.Region
	}
	if true {
		toSerialize["sockets"] = o.Sockets
	}
	if true {
		toSerialize["state"] = o.State
	}
	if true {
		toSerialize["state_description"] = o.StateDescription
	}
	if true {
		toSerialize["storage"] = o.Storage
	}
	if true {
		toSerialize["subscription_cpu_total"] = o.SubscriptionCpuTotal
	}
	if true {
		toSerialize["subscription_obligation_exists"] = o.SubscriptionObligationExists
	}
	if true {
		toSerialize["subscription_socket_total"] = o.SubscriptionSocketTotal
	}
	if true {
		toSerialize["upgrade"] = o.Upgrade
	}
	return json.Marshal(toSerialize)
}

type NullableOneMetric struct {
	value *OneMetric
	isSet bool
}

func (v NullableOneMetric) Get() *OneMetric {
	return v.value
}

func (v *NullableOneMetric) Set(val *OneMetric) {
	v.value = val
	v.isSet = true
}

func (v NullableOneMetric) IsSet() bool {
	return v.isSet
}

func (v *NullableOneMetric) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOneMetric(val *OneMetric) *NullableOneMetric {
	return &NullableOneMetric{value: val, isSet: true}
}

func (v NullableOneMetric) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOneMetric) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
