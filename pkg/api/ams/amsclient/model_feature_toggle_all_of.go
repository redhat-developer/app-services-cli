/*
 * Account Management Service API
 *
 * Manage user subscriptions and clusters
 *
 * API version: 0.0.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package amsclient

import (
	"encoding/json"
)

// FeatureToggleAllOf struct for FeatureToggleAllOf
type FeatureToggleAllOf struct {
	Enabled bool `json:"enabled"`
}

// NewFeatureToggleAllOf instantiates a new FeatureToggleAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFeatureToggleAllOf(enabled bool) *FeatureToggleAllOf {
	this := FeatureToggleAllOf{}
	this.Enabled = enabled
	return &this
}

// NewFeatureToggleAllOfWithDefaults instantiates a new FeatureToggleAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFeatureToggleAllOfWithDefaults() *FeatureToggleAllOf {
	this := FeatureToggleAllOf{}
	var enabled bool = false
	this.Enabled = enabled
	return &this
}

// GetEnabled returns the Enabled field value
func (o *FeatureToggleAllOf) GetEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *FeatureToggleAllOf) GetEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Enabled, true
}

// SetEnabled sets field value
func (o *FeatureToggleAllOf) SetEnabled(v bool) {
	o.Enabled = v
}

func (o FeatureToggleAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["enabled"] = o.Enabled
	}
	return json.Marshal(toSerialize)
}

type NullableFeatureToggleAllOf struct {
	value *FeatureToggleAllOf
	isSet bool
}

func (v NullableFeatureToggleAllOf) Get() *FeatureToggleAllOf {
	return v.value
}

func (v *NullableFeatureToggleAllOf) Set(val *FeatureToggleAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableFeatureToggleAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableFeatureToggleAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFeatureToggleAllOf(val *FeatureToggleAllOf) *NullableFeatureToggleAllOf {
	return &NullableFeatureToggleAllOf{value: val, isSet: true}
}

func (v NullableFeatureToggleAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFeatureToggleAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
