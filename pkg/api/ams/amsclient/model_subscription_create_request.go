/*
 * Account Management Service API
 *
 * Manage user subscriptions and clusters
 *
 * API version: 0.0.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package amsclient

import (
	"encoding/json"
)

// SubscriptionCreateRequest struct for SubscriptionCreateRequest
type SubscriptionCreateRequest struct {
	ClusterUuid string  `json:"cluster_uuid"`
	ConsoleUrl  *string `json:"console_url,omitempty"`
	DisplayName *string `json:"display_name,omitempty"`
	PlanId      string  `json:"plan_id"`
	Status      string  `json:"status"`
}

// NewSubscriptionCreateRequest instantiates a new SubscriptionCreateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSubscriptionCreateRequest(clusterUuid string, planId string, status string) *SubscriptionCreateRequest {
	this := SubscriptionCreateRequest{}
	this.ClusterUuid = clusterUuid
	this.PlanId = planId
	this.Status = status
	return &this
}

// NewSubscriptionCreateRequestWithDefaults instantiates a new SubscriptionCreateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSubscriptionCreateRequestWithDefaults() *SubscriptionCreateRequest {
	this := SubscriptionCreateRequest{}
	return &this
}

// GetClusterUuid returns the ClusterUuid field value
func (o *SubscriptionCreateRequest) GetClusterUuid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClusterUuid
}

// GetClusterUuidOk returns a tuple with the ClusterUuid field value
// and a boolean to check if the value has been set.
func (o *SubscriptionCreateRequest) GetClusterUuidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClusterUuid, true
}

// SetClusterUuid sets field value
func (o *SubscriptionCreateRequest) SetClusterUuid(v string) {
	o.ClusterUuid = v
}

// GetConsoleUrl returns the ConsoleUrl field value if set, zero value otherwise.
func (o *SubscriptionCreateRequest) GetConsoleUrl() string {
	if o == nil || o.ConsoleUrl == nil {
		var ret string
		return ret
	}
	return *o.ConsoleUrl
}

// GetConsoleUrlOk returns a tuple with the ConsoleUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriptionCreateRequest) GetConsoleUrlOk() (*string, bool) {
	if o == nil || o.ConsoleUrl == nil {
		return nil, false
	}
	return o.ConsoleUrl, true
}

// HasConsoleUrl returns a boolean if a field has been set.
func (o *SubscriptionCreateRequest) HasConsoleUrl() bool {
	if o != nil && o.ConsoleUrl != nil {
		return true
	}

	return false
}

// SetConsoleUrl gets a reference to the given string and assigns it to the ConsoleUrl field.
func (o *SubscriptionCreateRequest) SetConsoleUrl(v string) {
	o.ConsoleUrl = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *SubscriptionCreateRequest) GetDisplayName() string {
	if o == nil || o.DisplayName == nil {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriptionCreateRequest) GetDisplayNameOk() (*string, bool) {
	if o == nil || o.DisplayName == nil {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *SubscriptionCreateRequest) HasDisplayName() bool {
	if o != nil && o.DisplayName != nil {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *SubscriptionCreateRequest) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetPlanId returns the PlanId field value
func (o *SubscriptionCreateRequest) GetPlanId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PlanId
}

// GetPlanIdOk returns a tuple with the PlanId field value
// and a boolean to check if the value has been set.
func (o *SubscriptionCreateRequest) GetPlanIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PlanId, true
}

// SetPlanId sets field value
func (o *SubscriptionCreateRequest) SetPlanId(v string) {
	o.PlanId = v
}

// GetStatus returns the Status field value
func (o *SubscriptionCreateRequest) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *SubscriptionCreateRequest) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *SubscriptionCreateRequest) SetStatus(v string) {
	o.Status = v
}

func (o SubscriptionCreateRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["cluster_uuid"] = o.ClusterUuid
	}
	if o.ConsoleUrl != nil {
		toSerialize["console_url"] = o.ConsoleUrl
	}
	if o.DisplayName != nil {
		toSerialize["display_name"] = o.DisplayName
	}
	if true {
		toSerialize["plan_id"] = o.PlanId
	}
	if true {
		toSerialize["status"] = o.Status
	}
	return json.Marshal(toSerialize)
}

type NullableSubscriptionCreateRequest struct {
	value *SubscriptionCreateRequest
	isSet bool
}

func (v NullableSubscriptionCreateRequest) Get() *SubscriptionCreateRequest {
	return v.value
}

func (v *NullableSubscriptionCreateRequest) Set(val *SubscriptionCreateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSubscriptionCreateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSubscriptionCreateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSubscriptionCreateRequest(val *SubscriptionCreateRequest) *NullableSubscriptionCreateRequest {
	return &NullableSubscriptionCreateRequest{value: val, isSet: true}
}

func (v NullableSubscriptionCreateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSubscriptionCreateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
