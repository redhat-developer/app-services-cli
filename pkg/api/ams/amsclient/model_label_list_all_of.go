/*
 * Account Management Service API
 *
 * Manage user subscriptions and clusters
 *
 * API version: 0.0.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package amsclient

import (
	"encoding/json"
)

// LabelListAllOf struct for LabelListAllOf
type LabelListAllOf struct {
	Items *[]Label `json:"items,omitempty"`
}

// NewLabelListAllOf instantiates a new LabelListAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLabelListAllOf() *LabelListAllOf {
	this := LabelListAllOf{}
	return &this
}

// NewLabelListAllOfWithDefaults instantiates a new LabelListAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLabelListAllOfWithDefaults() *LabelListAllOf {
	this := LabelListAllOf{}
	return &this
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *LabelListAllOf) GetItems() []Label {
	if o == nil || o.Items == nil {
		var ret []Label
		return ret
	}
	return *o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LabelListAllOf) GetItemsOk() (*[]Label, bool) {
	if o == nil || o.Items == nil {
		return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *LabelListAllOf) HasItems() bool {
	if o != nil && o.Items != nil {
		return true
	}

	return false
}

// SetItems gets a reference to the given []Label and assigns it to the Items field.
func (o *LabelListAllOf) SetItems(v []Label) {
	o.Items = &v
}

func (o LabelListAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Items != nil {
		toSerialize["items"] = o.Items
	}
	return json.Marshal(toSerialize)
}

type NullableLabelListAllOf struct {
	value *LabelListAllOf
	isSet bool
}

func (v NullableLabelListAllOf) Get() *LabelListAllOf {
	return v.value
}

func (v *NullableLabelListAllOf) Set(val *LabelListAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableLabelListAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableLabelListAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLabelListAllOf(val *LabelListAllOf) *NullableLabelListAllOf {
	return &NullableLabelListAllOf{value: val, isSet: true}
}

func (v NullableLabelListAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLabelListAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
