/*
 * Account Management Service API
 *
 * Manage user subscriptions and clusters
 *
 * API version: 0.0.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package amsclient

import (
	"encoding/json"
)

// PermissionListAllOf struct for PermissionListAllOf
type PermissionListAllOf struct {
	Items *[]Permission `json:"items,omitempty"`
}

// NewPermissionListAllOf instantiates a new PermissionListAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPermissionListAllOf() *PermissionListAllOf {
	this := PermissionListAllOf{}
	return &this
}

// NewPermissionListAllOfWithDefaults instantiates a new PermissionListAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPermissionListAllOfWithDefaults() *PermissionListAllOf {
	this := PermissionListAllOf{}
	return &this
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *PermissionListAllOf) GetItems() []Permission {
	if o == nil || o.Items == nil {
		var ret []Permission
		return ret
	}
	return *o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PermissionListAllOf) GetItemsOk() (*[]Permission, bool) {
	if o == nil || o.Items == nil {
		return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *PermissionListAllOf) HasItems() bool {
	if o != nil && o.Items != nil {
		return true
	}

	return false
}

// SetItems gets a reference to the given []Permission and assigns it to the Items field.
func (o *PermissionListAllOf) SetItems(v []Permission) {
	o.Items = &v
}

func (o PermissionListAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Items != nil {
		toSerialize["items"] = o.Items
	}
	return json.Marshal(toSerialize)
}

type NullablePermissionListAllOf struct {
	value *PermissionListAllOf
	isSet bool
}

func (v NullablePermissionListAllOf) Get() *PermissionListAllOf {
	return v.value
}

func (v *NullablePermissionListAllOf) Set(val *PermissionListAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullablePermissionListAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullablePermissionListAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePermissionListAllOf(val *PermissionListAllOf) *NullablePermissionListAllOf {
	return &NullablePermissionListAllOf{value: val, isSet: true}
}

func (v NullablePermissionListAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePermissionListAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
